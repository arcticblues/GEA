--[[
%% autostart
%% properties
5 value
68 value
58 value
56 value
25 value
112 value
120 value
39 value
%% globals
--]]


-- v 5.40
-- ==================================================
-- GEA : Gestionnaire d'Evénements Automatique
-- ==================================================
-- [FR] Scénario permettant de contrôler si un périphérique est 
-- activé depuis trop longtemps ou lancer un push d'avertissement.
-- Ce scénario permet une annotation plus simple que le code LUA
-- il nécessite néanmoins quelques connaissances.
--
-- [EN] This scene allow you to check every X second the status
-- of a module and send actions if the module is activated since too long.
-- This scene allow you a more simple annotation than LUA
-- it requires some knowledge
--
-- Auteur : Steven P. with modifications of Hansolo and Shyrka973
-- Version : 5.40
-- Special Thanks to :
-- jompa68, Fredric, Diuck, Domodial, moicphil, lolomail, byackee,
-- JossAlf, Did,  sebcbien, chris6783 and all other guy from Domotique-fibaro.fr
-- ------------------------------------------------------------
-- Historique / History
-- ------------------------------------------------------------
-- L'historique complet est diponible ici / the full history is available here :
-- http://www.domotique-fibaro.fr/index.php/topic/1082-gea-gestionnaire-dévénements-automatique/?p=12428



-- Paramétrage de GEA / GEA configuration
function config()
  GEA.isVersionFour           = true -- On est en version 4.017 Beta ou supérieure / 
  GEA.language                = "FR" -- Votre langue : FR (default) / Your language : EN
  GEA.checkEvery              = 30 -- On vérifie toutes les X secondes  (default : 30) / Check every X seconds
  GEA.portables               = {179} -- Liste des portables devant recevoir une notification {70, 71} / Smartphones you want to be notified
  GEA.debug                   = false -- Affichage des traces dans la console (default : false) / Show trace in the debug window
  -- GEA.getGlobalForActivation = {"SuspendreGEA", "non"} -- active ou désactive l'exécution de GEA via une variable globale / active or deactive GEA execution with a global variable
  -- GEA.catchError             = false
  GEA.optimize                = GEA.typeOptimize["IMMEDIATE_ONLY"]
  -- option : GEA.typeOptimize["NONE"], GEA.typeOptimize["IMMEDIATE_ONLY"], GEA.typeOptimize["ALL"]
  -- permet d'optimiser les soucis liés au getName et getRoom de fibaro mais n'affiche plus le nom des modules concernés.
end 



-- Ajouter ici les événements à exécuter / Add here events to schedule
-- Une liste d'exemples est disponible dans un fichier annexe samples.lua / A samples list is available in another file called samples.lua
function setEvents() 



end



-- ==================================================
--
--  NE PLUS RIEN TOUCHER / DON'T TOUCH UNDER THIS POINT
--
-- ==================================================
--
-- SCRIPT GEA PRINCIPAL / GEA MAIN SCRIPT
--
-- ==================================================
if not GEA then GEA={}GEA.version="5.40"GEA.language="FR"GEA.checkEvery=30;GEA.index=0;GEA.isVersionFour=true;GEA.globalTasks="GEA_Tasks"GEA.regexFullAllow=false;GEA.portables={}GEA.todo={}GEA.power="valueSensor"GEA.suspended=""GEA.keys={ID=1,SECONDES=2,MESSAGE=3,ISREPEAT=4,PARAMS=5,NAME=6,NBRUN=7,DONE=8,VALUE=9,GROUPS=10,OK=11,TOTALRUNS=12,INDEX=13,MAXTIME=14,ROOM=15}GEA.debug=false;GEA.catchError=true;GEA.pos=1;GEA.useTasksGlobal=true;GEA.tasks=""GEA.typeOptimize={NONE=0,IMMEDIATE_ONLY=1,ALL=2}GEA.optimize=GEA.typeOptimize["NONE"]GEA.getGlobalForActivation={}GEA.source=fibaro:getSourceTrigger()GEA.translate={true,true}GEA.translate["FR"]={ACTIONS="traitement des actions",ACTIVATED="activé",ADDED_DIRECT="ajout de la tâche pour lancement instantané",ADDED_FOR="ajout de la tâche pour",ALWAYS="Toujours",BATTERIE="Pile faible",CHECKING="vérification",CHECKING_DATE="vérification des dates",CHECKING_TIME="vérification plage horaire",CHECK_IF="vérification de l'exception",CHECK_IF_FAILED="désactivé par exception",CHECK_MAIN="vérification de l'activation",CHECK_STARTED="démarrage vérification",CURRENT_TIME="L'heure actuelle",DATE_NOT_ALLOWED="n'est pas dans la plage de dates spécifiées",DESACTIVATED="désactivé",DONE="tâche effectuée et suspendue",ERROR="!!! ERREUR !!!",ERROR_IF="IF malformé",GEA_SUSPENDED="Scénario suspendu par la variable globale ",HOUR="heure",HOURS="heures",MINUTE="minute",MINUTES="minutes",NOTHING_TODO="aucun traitement à effectuer",NOTHING_TODOID="aucun traitement à effectuer pour l'ID :",NOT_INCLUDED="n'est pas inclus dans",REQUERIED="attendu",RESTART="Redémarrage",RUN="En cours",RUNNING="en exécution",RUN_FOR="Durée des traitements : ",RUN_NEW="nouveau délai : ",RUN_SINCE="tourne depuis",SECOND="seconde",SECONDS="secondes",SLEEPING="Endormi pendant",SUPSENDED="Arrêtée",SUSPEND_ERROR="ERROR GEA.Suspend demande un tableau en paramètre 2",TIME_IN="vérification contrôlée car dans la plage horaire spécifiée ",TIME_NOT_ALLOWED="n'est pas autorisée",TIME_OUT="vérification ignorée car en dehors de la plage horaire : ",TODAY="Aujourd'hui ",TODAY_NOT_DST="Aujourd'hui n'est pas en mode DST",VALUE="valeur",WILL_SUSPEND="entrainera la suspension de"}GEA.translate["EN"]={ACTIONS="doing actions",ACTIVATED="activate",ADDED_DIRECT="task added for instant run",ADDED_FOR="task added for",ALWAYS="Always",BATTERIE="Low batterie",CHECKING="checking",CHECKING_DATE="checking dates",CHECKING_TIME="checking time range",CHECK_IF="'if' checking",CHECK_IF_FAILED="'if' stop the check",CHECK_MAIN="activation checking",CHECK_STARTED="starting checking",CURRENT_TIME="Current hour",DATE_NOT_ALLOWED="is not in the specify dates range",DESACTIVATED="désactivate",DONE="task done and suspended",ERROR="!!! ERROR !!!",ERROR_IF="IF malformed",GEA_SUSPENDED="Scene suspended by the global variable ",HOUR="hour",HOURS="hours",MINUTE="minute",MINUTES="minutes",NOTHING_TODO="nothing to do",NOTHING_TODOID="nothing to do for ID:",NOT_INCLUDED="is not included in",REQUERIED="excpeted",RESTART="Restart",RUN="Run",RUNNING="Running",RUN_FOR="Duration : ",RUN_NEW="new delay : ",RUN_SINCE="running since",SECOND="second",SECONDS="seconds",SLEEPING="Sleeping for",SUPSENDED="Stopped",SUSPEND_ERROR="ERROR GEA.Suspend require a table as second parameter",TIME_IN="checking done time range is ok ",TIME_NOT_ALLOWED="is not allowed",TIME_OUT="checking abort because out of time range: ",TODAY="Today ",TODAY_NOT_DST="Today is not in DST mode",VALUE="value",WILL_SUSPEND="will suspend "}GEA.add=function(a,b,c,d)local e=false;local f=false;local g=-1;local h={}local i={}local j={}local k={}if d and#d>0 then for l=1,#d do lowCapsArg=string.lower(d[l][1])if lowCapsArg=="repeat"then e=true elseif lowCapsArg=="maxtime"then g=tonumber(d[l][2])elseif lowCapsArg=="group"then h[tonumber(d[l][2])]=true elseif lowCapsArg=="notstarted"then f=true end end;i=d end;if g>-1 then e=true end;GEA.index=GEA.index+1;if type(a)=="table"then if type(a[1])=="number"or type(a[1])=="table"then local m={}for l=2,#a do table.insert(m,a[l])j[l],k[l]=GEA.getName(a[l])end;a=a[1]if type(a)=="table"and type(a[1])=="string"and string.lower(a[1])=="alarm"then e=false;b=1 end;table.insert(i,{"If",m})elseif type(a[1])=="string"then if string.lower(a[1])=="global"and#a>2 and a[2]==""and a[3]==""then a=true elseif string.lower(a[1])=="alarm"then e=false;b=1 end end end;j[1],k[1]=GEA.getName(a)local n={a,b,c,e,i,j,0,false,{},h,false,0,GEA.index,g,k}if GEA.source["type"]=="autostart"and tonumber(n[GEA.keys["SECONDES"]])>=0 then GEA.insert(n)GEA.log("Add Autostart",n,GEA.translate[GEA.language]["ADDED_FOR"].." "..b.." "..GEA.translate[GEA.language]["SECONDS"],true,"grey")if f then local o=GEA.getCode("S",n[GEA.keys["INDEX"]])if GEA.suspended~=nil then GEA.suspended=string.gsub(GEA.suspended,o,"")end;GEA.suspended=GEA.suspended..o end elseif GEA.source["type"]=="global"and tonumber(n[GEA.keys["SECONDES"]])<0 then if type(n[GEA.keys["ID"]])=="table"and GEA.match(string.lower(n[GEA.keys["ID"]][1]),"global|global.")and n[GEA.keys["ID"]][2]==GEA.source["name"]then GEA.insert(n)GEA.log("Add Global",n,GEA.translate[GEA.language]["ADDED_DIRECT"],true,"grey")end elseif GEA.source["type"]=="property"and tonumber(n[GEA.keys["SECONDES"]])<0 then local a=0;if type(n[GEA.keys["ID"]])=="number"then a=n[GEA.keys["ID"]]elseif type(n[GEA.keys["ID"]])=="table"then a=n[GEA.keys["ID"]][2]if string.lower(n[GEA.keys["ID"]][1])=="sceneactivation"and#n[GEA.keys["ID"]]>2 then if tonumber(fibaro:getValue(a,"sceneActivation"))~=tonumber(n[GEA.keys["ID"]][3])then a=-1 end end end;if tonumber(a)==tonumber(GEA.source["deviceID"])then GEA.insert(n)GEA.log("Add Property",n,GEA.translate[GEA.language]["ADDED_DIRECT"],true,"grey")end end;return n[GEA.keys["INDEX"]]end;GEA.insert=function(n)GEA.todo[GEA.pos]=n;GEA.pos=GEA.pos+1;return n[GEA.keys["INDEX"]]end;GEA.addOrRemoveTask=function(p,index,add)local q=nil;local o=GEA.getCode(p,index)if GEA.useTasksGlobal then q=fibaro:getGlobalValue(GEA.globalTasks)else q=GEA.tasks end;if q~=nil then q=string.gsub(q,o,"")end;if add then if GEA.useTasksGlobal then fibaro:setGlobal(GEA.globalTasks,q..o)else GEA.tasks=q..o end else if GEA.useTasksGlobal then fibaro:setGlobal(GEA.globalTasks,q)else GEA.tasks=q end end end;GEA.isTask=function(p,index)local q=nil;local o=GEA.getCode(p,index)if GEA.useTasksGlobal then q=fibaro:getGlobalValue(GEA.globalTasks)else q=GEA.tasks end;if q~=nil then return string.match(q,o)end;return nil end;GEA.getCode=function(p,index)return"|"..p.."_"..index.."|"end;GEA.getName=function(a)if GEA.optimize==GEA.typeOptimize["ALL"]or GEA.source["type"]~="autostart"and GEA.optimize==GEA.typeOptimize["IMMEDIATE_ONLY"]then return"n/a","n/a"end;local k=""if type(a)=="nil"or type(a)=="boolean"then return GEA.translate[GEA.language]["ALWAYS"],""elseif type(a)=="number"then return fibaro:getName(tonumber(a)),GEA.getRoom(tonumber(a))elseif type(a)=="table"and GEA.match(string.lower(a[1]),"global|global.")then return a[2],""elseif type(a)=="table"then lowerCaps=string.lower(a[1])if a[2]then idNumeric=tonumber(a[2])end;if lowerCaps=="batteries"then return"Batteries <= "..a[1],""elseif lowerCaps=="sceneactivation"then return"Scene ["..a[2].."|"..fibaro:getName(idNumeric).."] = "..a[3],GEA.getRoom(idNumeric)elseif lowerCaps=="sensor"then return"Sensor ["..a[2].."|"..fibaro:getName(idNumeric).."] = "..a[3],GEA.getRoom(idNumeric)elseif lowerCaps=="sensor+"then return"Sensor ["..a[2].."|"..fibaro:getName(idNumeric).."] > "..a[3],GEA.getRoom(idNumeric)elseif lowerCaps=="sensor-"then return"Sensor ["..a[2].."|"..fibaro:getName(idNumeric).."] < "..a[3],GEA.getRoom(idNumeric)elseif lowerCaps=="sensor!"then return"Sensor ["..a[2].."|"..fibaro:getName(idNumeric).."] ~= "..a[3],GEA.getRoom(idNumeric)elseif lowerCaps=="battery"then return"["..a[2].."|"..fibaro:getName(idNumeric).."] <= "..a[3],GEA.getRoom(idNumeric)elseif lowerCaps=="value"then return"Value ["..a[2].."|"..fibaro:getName(idNumeric).."] = "..a[3],GEA.getRoom(idNumeric)elseif lowerCaps=="value+"then return"Value ["..a[2].."|"..fibaro:getName(idNumeric).."] > "..a[3],GEA.getRoom(idNumeric)elseif lowerCaps=="value-"then return"Value ["..a[2].."|"..fibaro:getName(idNumeric).."] < "..a[3],GEA.getRoom(idNumeric)elseif lowerCaps=="value!"then return"Value ["..a[2].."|"..fibaro:getName(idNumeric).."] ~= "..a[3],GEA.getRoom(idNumeric)elseif lowerCaps=="dead"then return"Dead ["..a[2].."|"..fibaro:getName(idNumeric).."]",GEA.getRoom(idNumeric)elseif lowerCaps=="slider"then return"Slider ["..a[2].."|"..a[3].."] = "..a[4],GEA.getRoom(idNumeric)elseif lowerCaps=="slider+"then return"Slider ["..a[2].."|"..a[3].."] > "..a[4],GEA.getRoom(idNumeric)elseif lowerCaps=="slider-"then return"Slider ["..a[2].."|"..a[3].."] < "..a[4],GEA.getRoom(idNumeric)elseif lowerCaps=="slider!"then return"Slider ["..a[2].."|"..a[3].."] ~= "..a[4],GEA.getRoom(idNumeric)elseif lowerCaps=="label"then return"Label ["..a[2].."|"..a[3].."] = "..a[4],GEA.getRoom(idNumeric)elseif lowerCaps=="label!"then return"Label ["..a[2].."|"..a[3].."] ~= "..a[4],GEA.getRoom(idNumeric)elseif lowerCaps=="function"then return"Function",""elseif lowerCaps=="weather"then return"Weather",""elseif lowerCaps=="alarm"then return"Alarm "..fibaro:getValue(idNumeric,"ui.lblAlarme.value"),""elseif lowerCaps=="property"then return"Property ["..a[2].."|"..a[3].."] = "..a[4],GEA.getRoom(idNumeric)elseif lowerCaps=="property!"then return"Property ["..a[2].."|"..a[3].."] ~= "..a[4],GEA.getRoom(idNumeric)elseif lowerCaps=="group"then return"Group ["..a[2].."]",""else end end end;GEA.getRoom=function(a)local r=fibaro:getRoomID(a)if type(r)=="number"then local s=fibaro:getRoomName(r)if type(s)=="string"then return s end end;return""end;GEA.checkDay=function(t)local u=false;jours=t;jours=string.gsub(jours,"All","Weekday,Weekend")jours=string.gsub(jours,"Weekday","Monday,Tuesday,Wednesday,Thursday,Friday")jours=string.gsub(jours,"Weekend","Saturday,Sunday")if string.find(string.lower(jours),string.lower(os.date("%A")))then u=true end;return u end;GEA.checkTimes=function(n)GEA.log("Check",n,GEA.translate[GEA.language]["CHECKING_DATE"],false)if not n[GEA.keys["PARAMS"]]then return true end;local v=true;local u=true;local w=true;local x=true;local jours=""if type(n[GEA.keys["PARAMS"]])=="table"then for l=1,#n[GEA.keys["PARAMS"]]do if type(n[GEA.keys["PARAMS"]][l])=="table"and string.lower(n[GEA.keys["PARAMS"]][l][1])=="days"then u=GEA.checkDay(n[GEA.keys["PARAMS"]][l][2])elseif type(n[GEA.keys["PARAMS"]][l])=="table"and string.lower(n[GEA.keys["PARAMS"]][l][1])=="dst"then x=os.date("*t",os.time()).isdst elseif type(n[GEA.keys["PARAMS"]][l])=="table"and string.lower(n[GEA.keys["PARAMS"]][l][1])=="notdst"then x=not os.date("*t",os.time()).isdst elseif type(n[GEA.keys["PARAMS"]][l])=="table"and string.lower(n[GEA.keys["PARAMS"]][l][1])=="dates"then w=false;local y=os.date("%Y%m%d")local z=n[GEA.keys["PARAMS"]][l][2]if string.len(z)==5 then z=z.."/"..os.date("%Y")end;z=string.format("%04d",GEA.split(z,"/")[3])..string.format("%02d",GEA.split(z,"/")[2])..string.format("%02d",GEA.split(z,"/")[1])local A=n[GEA.keys["PARAMS"]][l][3]if string.len(A)==5 then A=A.."/"..os.date("%Y")end;A=string.format("%04d",GEA.split(A,"/")[3])..string.format("%02d",GEA.split(A,"/")[2])..string.format("%02d",GEA.split(A,"/")[1])w=tonumber(y)>=tonumber(z)and tonumber(y)<=tonumber(A)end end end;if u and x then local B=false;for l=1,#n[GEA.keys["PARAMS"]]do if type(n[GEA.keys["PARAMS"]][l])=="table"and string.lower(n[GEA.keys["PARAMS"]][l][1])=="dates"then if not B then w=false end;local y=os.date("%Y%m%d")local z=n[GEA.keys["PARAMS"]][l][2]if string.len(z)==5 then z=z.."/"..os.date("%Y")end;z=string.format("%04d",GEA.split(z,"/")[3])..string.format("%02d",GEA.split(z,"/")[2])..string.format("%02d",GEA.split(z,"/")[1])local A=n[GEA.keys["PARAMS"]][l][3]if string.len(A)==5 then A=A.."/"..os.date("%Y")end;A=string.format("%04d",GEA.split(A,"/")[3])..string.format("%02d",GEA.split(A,"/")[2])..string.format("%02d",GEA.split(A,"/")[1])if tonumber(z)>tonumber(A)and tonumber(z)>tonumber(y)then z=tonumber(z)-10000 end;if tonumber(y)>=tonumber(z)and tonumber(y)<=tonumber(A)then w=true;B=true end end end end;if u and x and w then for l=1,#n[GEA.keys["PARAMS"]]do if type(n[GEA.keys["PARAMS"]][l])=="table"and string.lower(n[GEA.keys["PARAMS"]][l][1])=="time"then v=false;if GEA.checkTime(n,GEA.flatTime(n[GEA.keys["PARAMS"]][l][2]).."-"..GEA.flatTime(n[GEA.keys["PARAMS"]][l][3]))then return true end end end else if not u then GEA.log("!CANCEL! CheckTimes",n,GEA.translate[GEA.language]["TODAY"].." "..os.date("%A").." "..GEA.translate[GEA.language]["NOT_INCLUDED"].." "..jours,false,"yellow")elseif not x then GEA.log("!CANCEL! CheckTimes",n,GEA.translate[GEA.language]["TODAY_NOT_DST"],false,"yellow")elseif not w then GEA.log("!CANCEL! CheckTimes",n,GEA.translate[GEA.language]["TODAY"].." "..os.date("%x").." "..GEA.translate[GEA.language]["DATE_NOT_ALLOWED"],false,"yellow")end end;if not v then GEA.log("!CANCEL! CheckTimes",n,GEA.translate[GEA.language]["CURRENT_TIME"].." "..os.date("%H:%M").." "..GEA.translate[GEA.language]["TIME_NOT_ALLOWED"],false,"yellow")end;return v and w and u and x end;GEA.flatTime=function(time)local C=string.lower(time)C=string.gsub(C," ","")C=string.gsub(C,"h",":")C=string.gsub(C,"sunset",fibaro:getValue(1,"sunsetHour"))C=string.gsub(C,"sunrise",fibaro:getValue(1,"sunriseHour"))if string.find(C,"<")then C=GEA.flatTime(GEA.split(C,"<")[1]).."<"..GEA.flatTime(GEA.split(C,"<")[2])end;if string.find(C,">")then C=GEA.flatTime(GEA.split(C,">")[1])..">"..GEA.flatTime(GEA.split(C,">")[2])end;if string.find(C,"+")then local time=GEA.split(C,"+")[1]local add=GEA.split(C,"+")[2]local D=os.date("*t")local E=GEA.split(time,":")[2]local F=os.time{year=D.year,month=D.month,day=D.day,hour=tonumber(GEA.split(time,":")[1]),min=tonumber(GEA.split(time,":")[2]),sec=0}F=F+add*60;C=os.date("*t",F)C=string.format("%02d",C.hour)..":"..string.format("%02d",C.min)elseif string.find(C,"-")then local time=GEA.split(C,"-")[1]local add=GEA.split(C,"-")[2]local D=os.date("*t")local F=os.time{year=D.year,month=D.month,day=D.day,hour=tonumber(GEA.split(time,":")[1]),min=tonumber(GEA.split(time,":")[2]),sec=0}F=F-add*60;C=os.date("*t",F)C=string.format("%02d",C.hour)..":"..string.format("%02d",C.min)elseif string.find(C,"<")then local G=GEA.split(C,"<")[1]local H=GEA.split(C,"<")[2]G=string.format("%02d",GEA.split(G,":")[1])..":"..string.format("%02d",GEA.split(G,":")[2])H=string.format("%02d",GEA.split(H,":")[1])..":"..string.format("%02d",GEA.split(H,":")[2])if G<H then C=G else C=H end elseif string.find(C,">")then local G=GEA.split(C,">")[1]local H=GEA.split(C,">")[2]G=string.format("%02d",GEA.split(G,":")[1])..":"..string.format("%02d",GEA.split(G,":")[2])H=string.format("%02d",GEA.split(H,":")[1])..":"..string.format("%02d",GEA.split(H,":")[2])if G>H then C=G else C=H end else C=string.format("%02d",GEA.split(C,":")[1])..":"..string.format("%02d",GEA.split(C,":")[2])end;return C end;GEA.checkTime=function(n,I)GEA.log("CheckTime",n,GEA.translate[GEA.language]["CHECKING_TIME"].." "..I,false)if not I or I==""then return true end;local z=string.sub(I,1,5)local A=string.sub(I,7,11)local y=os.date("%H:%M")local J=false;if A<z then J=y>=z or y<=A else J=y>=z and y<=A end;if not J then GEA.log("CheckTime",n,GEA.translate[GEA.language]["TIME_OUT"]..I,false,"yellow")else GEA.log("CheckTime",n,GEA.translate[GEA.language]["TIME_IN"]..I,false)end;return J end;GEA.split=function(K,L)local L,M=L or":",{}local N=string.format("([^%s]+)",L)K:gsub(N,function(O)M[#M+1]=O end)return M end;GEA.trim=function(P)return P:gsub("^%s*(.-)%s*$","%1")end;GEA.match=function(P,Q)if type(P)=="nil"then return type(Q)=="nil"end;P=tostring(P)Q=tostring(Q):gsub("%%","%%%%"):gsub("-","%%-")local R=GEA.split(Q,"|")for l=1,#R do if not GEA.regexFullAllow then R[l]="^"..R[l].."$"end;if string.match(P,GEA.trim(R[l]))then return true end end;return false end;GEA.check=function(n,index)GEA.log("Check",n,GEA.translate[GEA.language]["CHECK_STARTED"],false)if GEA.isTask("R",n[GEA.keys["INDEX"]])~=nil then GEA.log("Check",n,GEA.translate[GEA.language]["RESTART"],true)n[GEA.keys["NBRUN"]]=0;n[GEA.keys["TOTALRUNS"]]=0;n[GEA.keys["DONE"]]=false;n[GEA.keys["OK"]]=false;GEA.addOrRemoveTask("R",n[GEA.keys["INDEX"]],false)GEA.addOrRemoveTask("S",n[GEA.keys["INDEX"]],false)end;if GEA.isTask("S",n[GEA.keys["INDEX"]])~=nil then GEA.log("Check",n,GEA.translate[GEA.language]["SUPSENDED"],true)return end;if not n[GEA.keys["DONE"]]then n[GEA.keys["OK"]]=false end;if GEA.checkTimes(n)then if GEA.isActivate(n,1,n)then if n[GEA.keys["SECONDES"]]<0 then local S=GEA.isTask("M",n[GEA.keys["INDEX"]].."{(%d+)}")if S~=nil then n[GEA.keys["TOTALRUNS"]]=tonumber(S)GEA.addOrRemoveTask("M",n[GEA.keys["INDEX"]].."{(%d+)}",false)end end;if n[GEA.keys["NBRUN"]]then n[GEA.keys["NBRUN"]]=n[GEA.keys["NBRUN"]]+1;n[GEA.keys["TOTALRUNS"]]=n[GEA.keys["TOTALRUNS"]]+1 else n[GEA.keys["NBRUN"]]=0;n[GEA.keys["TOTALRUNS"]]=0 end;if not n[GEA.keys["DONE"]]then GEA.log("Check",n,"activé depuis "..n[GEA.keys["TOTALRUNS"]]*GEA.checkEvery.."/"..n[GEA.keys["SECONDES"]],false)end;if n[GEA.keys["SECONDES"]]<0 and n[GEA.keys["MAXTIME"]]==-1 or n[GEA.keys["TOTALRUNS"]]-1<n[GEA.keys["MAXTIME"]]then GEA.sendActions(n)end;if n[GEA.keys["SECONDES"]]<0 and n[GEA.keys["MAXTIME"]]>-1 then GEA.addOrRemoveTask("M",n[GEA.keys["INDEX"]].."{(%d+)}",false)if n[GEA.keys["TOTALRUNS"]]>=n[GEA.keys["MAXTIME"]]then GEA.addOrRemoveTask("S",n[GEA.keys["INDEX"]],true)else GEA.addOrRemoveTask("M",n[GEA.keys["INDEX"]].."{"..n[GEA.keys["TOTALRUNS"]].."}",true)end end else n[GEA.keys["NBRUN"]]=0;n[GEA.keys["TOTALRUNS"]]=0;n[GEA.keys["DONE"]]=false;n[GEA.keys["OK"]]=false end;if GEA.source["type"]=="autostart"and n[GEA.keys["NBRUN"]]*GEA.checkEvery>=n[GEA.keys["SECONDES"]]and not n[GEA.keys["DONE"]]and n[GEA.keys["MAXTIME"]]==-1 or n[GEA.keys["TOTALRUNS"]]-1<n[GEA.keys["MAXTIME"]]then GEA.sendActions(n)n[GEA.keys["OK"]]=true;if n[GEA.keys["ISREPEAT"]]and n[GEA.keys["MAXTIME"]]==-1 then else if n[GEA.keys["MAXTIME"]]==-1 or n[GEA.keys["TOTALRUNS"]]>=n[GEA.keys["MAXTIME"]]then GEA.log("Done",n,GEA.translate[GEA.language]["DONE"],true,"DarkSlateBlue")n[GEA.keys["DONE"]]=true end end;n[GEA.keys["NBRUN"]]=0 end else n[GEA.keys["NBRUN"]]=0;n[GEA.keys["TOTALRUNS"]]=0;n[GEA.keys["DONE"]]=false;n[GEA.keys["OK"]]=false end end;GEA.isActivate=function(n,T,U)if T==1 then GEA.log("isActivate",n,GEA.translate[GEA.language]["CHECK_MAIN"],false)else GEA.log("isActivate",n,GEA.translate[GEA.language]["CHECK_IF"],false)end;local V=-1;local a=n[GEA.keys["ID"]]local W=true;local X=type(a)if X=="nil"then W=true;U[GEA.keys["VALUE"]][T]="true"elseif X=="boolean"then W=a;if W then U[GEA.keys["VALUE"]][T]="true"else U[GEA.keys["VALUE"]][T]="false"end elseif X=="number"then local type=fibaro:getType(tonumber(a))GEA.log("isActivate",n,"type : "..type,false)if GEA.match(type,"door_sensor|water_sensor|motion_sensor|com.fibaro.FGMS001|com.fibaro.doorSensor|com.fibaro.waterSensor|com.fibaro.motionSensor")then W=tonumber(fibaro:getValue(tonumber(a),"value"))>=1;if not W and GEA.source["type"]=="autostart"and fibaro:getValue(tonumber(a),"lastBreached")~=""then W=os.time()-tonumber(fibaro:getValue(tonumber(a),"lastBreached"))<GEA.checkEvery else if not W and GEA.source["type"]=="autostart"and fibaro:getModificationTime(tonumber(a),"value")then W=os.time()-tonumber(fibaro:getModificationTime(tonumber(a),"value"))<GEA.checkEvery end end elseif GEA.match(type,"dimmable_light|binary_light|rgb_driver|com.fibaro.FGRGBW441M|com.fibaro.multilevelSwitch|com.fibaro.binarySwitch")then if GEA.match(type,"rgb_driver")then W=tonumber(fibaro:getValue(tonumber(a),"value"))>0 or tonumber(fibaro:getValue(tonumber(a),"currentProgramID"))>0 elseif GEA.match(type,"com.fibaro.FGRGBW441M")then W=tonumber(fibaro:getValue(tonumber(a),"value"))>0 and not fibaro:getValue(tonumber(a),"color")=="0,0,0,0"or tonumber(fibaro:getValue(tonumber(a),"currentProgramID"))>0 else W=tonumber(fibaro:getValue(tonumber(a),"value"))>0 end;if not W and GEA.source["type"]=="autostart"and fibaro:getModificationTime(tonumber(a),"value")then W=os.time()-tonumber(fibaro:getModificationTime(tonumber(a),"value"))<GEA.checkEvery end elseif type=="blind"then W=tonumber(fibaro:getValue(tonumber(a),"value"))>0 else W=tonumber(fibaro:getValue(tonumber(a),"value"))==1 end;V=tonumber(a)U[GEA.keys["VALUE"]][T]=fibaro:getValue(tonumber(a),"value")elseif X=="table"and string.lower(a[1])=="global"and#a>2 then GEA.log("isActivate",n,"type : global variable",false)W=GEA.match(fibaro:getGlobalValue(a[2]),a[3])U[GEA.keys["VALUE"]][T]=fibaro:getGlobalValue(a[2])elseif X=="table"and string.lower(a[1])=="global+"and#a>2 then GEA.log("isActivate",n,"type : Global+",false)W=tonumber(fibaro:getGlobalValue(a[2]))>tonumber(a[3])U[GEA.keys["VALUE"]][T]=fibaro:getGlobalValue(a[2])elseif X=="table"and string.lower(a[1])=="global-"and#a>2 then GEA.log("isActivate",n,"type : Global-",false)W=tonumber(fibaro:getGlobalValue(a[2]))<tonumber(a[3])U[GEA.keys["VALUE"]][T]=fibaro:getGlobalValue(a[2])elseif X=="table"and string.lower(a[1])=="global!"and#a>2 then GEA.log("isActivate",n,"type : Global!",false)W=not GEA.match(fibaro:getGlobalValue(a[2]),a[3])U[GEA.keys["VALUE"]][T]=fibaro:getGlobalValue(a[2])elseif X=="table"and string.lower(a[1])=="slider"and#a>3 then GEA.log("isActivate",n,"type : Slider",false)W=tonumber(fibaro:getValue(a[2],"ui."..a[3]..".value"))==tonumber(a[4])U[GEA.keys["VALUE"]][T]=fibaro:getValue(a[2],"ui."..a[3]..".value")elseif X=="table"and string.lower(a[1])=="slider-"and#a>3 then GEA.log("isActivate",n,"type : Slider-",false)W=tonumber(fibaro:getValue(a[2],"ui."..a[3]..".value"))<tonumber(a[4])U[GEA.keys["VALUE"]][T]=fibaro:getValue(a[2],"ui."..a[3]..".value")elseif X=="table"and string.lower(a[1])=="slider!"and#a>3 then GEA.log("isActivate",n,"type : Slider!",false)W=tonumber(fibaro:getValue(a[2],"ui."..a[3]..".value"))~=tonumber(a[4])U[GEA.keys["VALUE"]][T]=fibaro:getValue(a[2],"ui."..a[3]..".value")elseif X=="table"and string.lower(a[1])=="slider+"and#a>3 then GEA.log("isActivate",n,"type : Slider+",false)W=tonumber(fibaro:getValue(a[2],"ui."..a[3]..".value"))>tonumber(a[4])U[GEA.keys["VALUE"]][T]=fibaro:getValue(a[2],"ui."..a[3]..".value")elseif X=="table"and string.lower(a[1])=="label"and#a>3 then GEA.log("isActivate",n,"type : Label",false)W=GEA.match(fibaro:getValue(a[2],"ui."..a[3]..".value"),a[4])U[GEA.keys["VALUE"]][T]=fibaro:getValue(a[2],"ui."..a[3]..".value")elseif X=="table"and string.lower(a[1])=="label!"and#a>3 then GEA.log("isActivate",n,"type : Label!",false)W=not GEA.match(fibaro:getValue(a[2],"ui."..a[3]..".value"),a[4])U[GEA.keys["VALUE"]][T]=fibaro:getValue(a[2],"ui."..a[3]..".value")elseif X=="table"and string.lower(a[1])=="property"and#a>3 then GEA.log("isActivate",n,"type : Property",false)W=GEA.match(fibaro:getValue(a[2],a[3]),a[4])U[GEA.keys["VALUE"]][T]=fibaro:getValue(a[2],a[3])elseif X=="table"and string.lower(a[1])=="property!"and#a>3 then GEA.log("isActivate",n,"type : Property",false)W=not GEA.match(fibaro:getValue(a[2],a[3]),a[4])U[GEA.keys["VALUE"]][T]=fibaro:getValue(a[2],a[3])elseif X=="table"and string.lower(a[1])=="batteries"and#a>1 then GEA.log("isActivate",n,"type : batteries",false)local Y=""for l=1,1000 do local Z=fibaro:getValue(l,'batteryLevel')if type(Z)~=nil and tonumber(Z)~=nil and tonumber(Z)<=tonumber(a[2])or tonumber(Z)==255 then GEA.log("isActivate",n,"checking : batteries "..fibaro:getName(l),false)if not string.find(fibaro:getName(l),"Zwave_")then Y=Y..GEA.translate[GEA.language]["BATTERIE"].." ["..fibaro:getName(l).."] "..Z.."%\n"W=true end end end;U[GEA.keys["VALUE"]][T]=a[2]n[GEA.keys["MESSAGE"]]=Y elseif X=="table"and string.lower(a[1])=="sensor"or string.lower(a[1])=="power"and#a>2 then GEA.log("isActivate",n,"type : Sensor",false)W=tonumber(fibaro:getValue(tonumber(a[2]),GEA.power))==tonumber(a[3])V=tonumber(a[2])U[GEA.keys["VALUE"]][T]=fibaro:getValue(tonumber(a[2]),GEA.power)elseif X=="table"and string.lower(a[1])=="sensor+"or string.lower(a[1])=="power+"and#a>2 then GEA.log("isActivate",n,"type : Sensor+",false)W=tonumber(fibaro:getValue(tonumber(a[2]),GEA.power))>tonumber(a[3])V=tonumber(a[2])U[GEA.keys["VALUE"]][T]=fibaro:getValue(tonumber(a[2]),GEA.power)elseif X=="table"and string.lower(a[1])=="sensor-"or string.lower(a[1])=="power-"and#a>2 then GEA.log("isActivate",n,"type : Sensor-",false)W=tonumber(fibaro:getValue(tonumber(a[2]),GEA.power))<tonumber(a[3])V=tonumber(a[2])U[GEA.keys["VALUE"]][T]=fibaro:getValue(tonumber(a[2]),GEA.power)elseif X=="table"and string.lower(a[1])=="sensor!"or string.lower(a[1])=="power!"and#a>2 then GEA.log("isActivate",n,"type : Sensor!",false)W=tonumber(fibaro:getValue(tonumber(a[2]),GEA.power))~=tonumber(a[3])V=tonumber(a[2])U[GEA.keys["VALUE"]][T]=fibaro:getValue(tonumber(a[2]),GEA.power)elseif X=="table"and string.lower(a[1])=="battery"and#a>2 then GEA.log("isActivate",n,"type : Battery",false)W=false;local Z=fibaro:getValue(tonumber(a[2]),'batteryLevel')if type(Z)~=nil and tonumber(Z)<=tonumber(a[3])or tonumber(Z)==255 then W=true;U[GEA.keys["VALUE"]][T]=Z end;V=tonumber(a[2])elseif X=="table"and string.lower(a[1])=="value"and#a>2 then GEA.log("isActivate",n,"type : Value",false)W=tonumber(fibaro:getValue(tonumber(a[2]),"value"))==tonumber(a[3])V=tonumber(a[2])U[GEA.keys["VALUE"]][T]=fibaro:getValue(tonumber(a[2]),"value")elseif X=="table"and string.lower(a[1])=="value+"and#a>2 then GEA.log("isActivate",n,"type : Value+",false)W=tonumber(fibaro:getValue(tonumber(a[2]),"value"))>tonumber(a[3])V=tonumber(a[2])U[GEA.keys["VALUE"]][T]=fibaro:getValue(tonumber(a[2]),"value")elseif X=="table"and string.lower(a[1])=="value-"and#a>2 then GEA.log("isActivate",n,"type : Value-",false)W=tonumber(fibaro:getValue(tonumber(a[2]),"value"))<tonumber(a[3])V=tonumber(a[2])U[GEA.keys["VALUE"]][T]=fibaro:getValue(tonumber(a[2]),"value")elseif X=="table"and string.lower(a[1])=="value!"and#a>2 then GEA.log("isActivate",n,"type : Value!",false)W=tonumber(fibaro:getValue(tonumber(a[2]),"value"))~=tonumber(a[3])V=tonumber(a[2])U[GEA.keys["VALUE"]][T]=fibaro:getValue(tonumber(a[2]),"value")elseif X=="table"and string.lower(a[1])=="dead"and#a>1 then GEA.log("isActivate",n,"type : isDead",false)W=tonumber(fibaro:getValue(tonumber(a[2]),"dead"))>=1;U[GEA.keys["VALUE"]][T]=fibaro:getValue(tonumber(a[2]),"dead")elseif X=="table"and string.lower(a[1])=="weather"and#a>1 then GEA.log("isActivate",n,"type : weather",false)W=GEA.match(fibaro:getValue(3,"WeatherConditionConverted"),a[2])U[GEA.keys["VALUE"]][T]=fibaro:getValue(3,"WeatherConditionConverted")elseif X=="table"and string.lower(a[1])=="function"and#a>1 then GEA.log("isActivate",n,"type : Function",false)local _,a0,a1=pcall(a[2])if _ then W=a0;if a1 then U[GEA.keys["VALUE"]][T]=a1 end else W=false end elseif X=="table"and string.lower(a[1])=="group"and#a>1 then GEA.log("isActivate",n,"type : Group",false)for l=1,#GEA.todo do if GEA.todo[l][GEA.keys["GROUPS"]][tonumber(a[2])]then if not GEA.todo[l][GEA.keys["OK"]]then W=false end end end;U[GEA.keys["VALUE"]][T]=fibaro:getValue(tonumber(a[2]),"")elseif X=="table"and string.lower(a[1])=="alarm"then GEA.log("isActivate",n,"type : alarm",false)local time=fibaro:getValue(tonumber(a[2]),"ui.lblAlarme.value")if not(type(time)=="nil"or time==""or time=="--:--")then W=GEA.checkTime(n,GEA.flatTime(time).."-"..GEA.flatTime(time))if W then local jours=fibaro:getValue(tonumber(a[2]),"ui.lblJours.value")local t=""if string.find(jours,"Lu")or string.find(jours,"Mo")then t=t.."Monday"end;if string.find(jours,"Ma")or string.find(jours,"Tu")then t=t.."Tuesday"end;if string.find(jours,"Me")or string.find(jours,"We")then t=t.."Wednesday"end;if string.find(jours,"Je")or string.find(jours,"Th")then t=t.."Thursday"end;if string.find(jours,"Ve")or string.find(jours,"Fr")then t=t.."Friday"end;if string.find(jours,"Sa")or string.find(jours,"Sa")then t=t.."Saturday"end;if string.find(jours,"Di")or string.find(jours,"Su")then t=t.."Sunday"end;W=GEA.checkDay(t)end;U[GEA.keys["VALUE"]][T]=time else W=false end else end;if T==1 then for l=1,#n[GEA.keys["PARAMS"]]do if string.lower(n[GEA.keys["PARAMS"]][l][1])=="inverse"then W=not W end end;if V>-1 and type(n[GEA.keys["PARAMS"]])=="table"then for l=1,#n[GEA.keys["PARAMS"]]do if string.lower(n[GEA.keys["PARAMS"]][l][1])=="armed"then W=W and tonumber(fibaro:getValue(V,"armed"))>0;if#n[GEA.keys["PARAMS"]][l]>1 then W=W and tonumber(fibaro:getValue(n[GEA.keys["PARAMS"]][l][2],"armed"))>0 end elseif string.lower(n[GEA.keys["PARAMS"]][l][1])=="disarmed"then W=W and tonumber(fibaro:getValue(V,"armed"))==0;if#n[GEA.keys["PARAMS"]][l]>1 then W=W and tonumber(fibaro:getValue(n[GEA.keys["PARAMS"]][l][2],"armed"))==0 end end end end;if W then for l=1,#n[GEA.keys["PARAMS"]]do if type(n[GEA.keys["PARAMS"]][l])=="table"and string.lower(n[GEA.keys["PARAMS"]][l][1])=="if"then local a2=true;for a3=1,#n[GEA.keys["PARAMS"]][l][2]do if type(n[GEA.keys["PARAMS"]][l][2])=="table"then if not GEA.isActivate({n[GEA.keys["PARAMS"]][l][2][a3]},a3+1,n)then a2=false;GEA.log("!CANCEL! isActivate",n,GEA.translate[GEA.language]["CHECK_IF_FAILED"],false,"yellow")end else GEA.log(GEA.translate[GEA.language]["ERROR"],n,GEA.translate[GEA.language]["ERROR_IF"],true,"red")end end;W=a2 end end end end;if W then GEA.log("isActivate",n,GEA.translate[GEA.language]["ACTIVATED"],false)else GEA.log("!CANCEL! isActivate",n,GEA.translate[GEA.language]["DESACTIVATED"],false,"yellow")end;return W end;GEA.getMessage=function(n,c)local Y=""if n[GEA.keys["MESSAGE"]]then Y=n[GEA.keys["MESSAGE"]]end;if c and c~=""then Y=c end;if n[GEA.keys["VALUE"]][1]then Y=string.gsub(Y,"#value#",n[GEA.keys["VALUE"]][1])Y=string.gsub(Y,"#value%[1%]#",n[GEA.keys["VALUE"]][1])end;if n[GEA.keys["VALUE"]][2]then Y=string.gsub(Y,"#value%[2%]#",n[GEA.keys["VALUE"]][2])end;if n[GEA.keys["VALUE"]][3]then Y=string.gsub(Y,"#value%[3%]#",n[GEA.keys["VALUE"]][3])end;if n[GEA.keys["VALUE"]][4]then Y=string.gsub(Y,"#value%[4%]#",n[GEA.keys["VALUE"]][4])end;if n[GEA.keys["VALUE"]][5]then Y=string.gsub(Y,"#value%[5%]#",n[GEA.keys["VALUE"]][5])end;if n[GEA.keys["VALUE"]][6]then Y=string.gsub(Y,"#value%[6%]#",n[GEA.keys["VALUE"]][6])end;if n[GEA.keys["VALUE"]][7]then Y=string.gsub(Y,"#value%[7%]#",n[GEA.keys["VALUE"]][7])end;if n[GEA.keys["VALUE"]][8]then Y=string.gsub(Y,"#value%[8%]#",n[GEA.keys["VALUE"]][8])end;if n[GEA.keys["VALUE"]][9]then Y=string.gsub(Y,"#value%[9%]#",n[GEA.keys["VALUE"]][9])end;Y=string.gsub(Y,"#time#",os.date("%X"))Y=string.gsub(Y,"#date#",os.date("%x"))if n[GEA.keys["NAME"]][1]then Y=string.gsub(Y,"#name#",n[GEA.keys["NAME"]][1])Y=string.gsub(Y,"#name%[1%]#",n[GEA.keys["NAME"]][1])end;if n[GEA.keys["NAME"]][2]then Y=string.gsub(Y,"#name%[2%]#",n[GEA.keys["NAME"]][2])end;if n[GEA.keys["NAME"]][3]then Y=string.gsub(Y,"#name%[3%]#",n[GEA.keys["NAME"]][3])end;if n[GEA.keys["NAME"]][4]then Y=string.gsub(Y,"#name%[4%]#",n[GEA.keys["NAME"]][4])end;if n[GEA.keys["NAME"]][5]then Y=string.gsub(Y,"#name%[5%]#",n[GEA.keys["NAME"]][5])end;if n[GEA.keys["NAME"]][6]then Y=string.gsub(Y,"#name%[6%]#",n[GEA.keys["NAME"]][6])end;if n[GEA.keys["NAME"]][7]then Y=string.gsub(Y,"#name%[7%]#",n[GEA.keys["NAME"]][7])end;if n[GEA.keys["NAME"]][8]then Y=string.gsub(Y,"#name%[8%]#",n[GEA.keys["NAME"]][8])end;if n[GEA.keys["NAME"]][9]then Y=string.gsub(Y,"#name%[9%]#",n[GEA.keys["NAME"]][9])end;if n[GEA.keys["ROOM"]][1]then Y=string.gsub(Y,"#room#",n[GEA.keys["ROOM"]][1])Y=string.gsub(Y,"#room%[1%]#",n[GEA.keys["ROOM"]][1])end;if n[GEA.keys["ROOM"]][2]then Y=string.gsub(Y,"#room%[2%]#",n[GEA.keys["ROOM"]][2])end;if n[GEA.keys["ROOM"]][3]then Y=string.gsub(Y,"#room%[3%]#",n[GEA.keys["ROOM"]][3])end;if n[GEA.keys["ROOM"]][4]then Y=string.gsub(Y,"#room%[4%]#",n[GEA.keys["ROOM"]][4])end;if n[GEA.keys["ROOM"]][5]then Y=string.gsub(Y,"#room%[5%]#",n[GEA.keys["ROOM"]][5])end;if n[GEA.keys["ROOM"]][6]then Y=string.gsub(Y,"#room%[6%]#",n[GEA.keys["ROOM"]][6])end;if n[GEA.keys["ROOM"]][7]then Y=string.gsub(Y,"#room%[7%]#",n[GEA.keys["ROOM"]][7])end;if n[GEA.keys["ROOM"]][8]then Y=string.gsub(Y,"#room%[8%]#",n[GEA.keys["ROOM"]][8])end;if n[GEA.keys["ROOM"]][9]then Y=string.gsub(Y,"#room%[9%]#",n[GEA.keys["ROOM"]][9])end;Y=string.gsub(Y,"#seconds#",n[GEA.keys["SECONDES"]])local a4=GEA.getDureeInString(n[GEA.keys["TOTALRUNS"]]*GEA.checkEvery)Y=string.gsub(Y,"#duration#",a4[1])Y=string.gsub(Y,"#durationfull#",a4[2])Y=string.gsub(Y,"#runs#",n[GEA.keys["TOTALRUNS"]])return Y end;GEA.getDureeInString=function(a5)local a5=a5;local a6=""nHours=math.floor(a5/3600)nMins=math.floor(a5/60-nHours*60)nSecs=math.floor(a5-nHours*3600-nMins*60)a5=""if nHours>0 then a5=a5 ..nHours.."h "a6=a6 ..nHours;if nHours>1 then a6=a6 .." "..GEA.translate[GEA.language]["HOURS"]else a6=a6 .." "..GEA.translate[GEA.language]["HOUR"]end end;if nMins>0 then a5=a5 ..nMins.."m "if nHours>0 then a6=a6 .." "end;if nSecs==0 and nHours>0 then a6=a6 .."et "end;a6=a6 ..nMins;if nMins>1 then a6=a6 .." "..GEA.translate[GEA.language]["MINUTES"]else a6=a6 .." "..GEA.translate[GEA.language]["MINUTE"]end end;if nSecs>0 then a5=a5 ..nSecs.."s"if nMins>0 then a6=a6 .." et "end;a6=a6 ..nSecs;if nSecs>1 then a6=a6 .." "..GEA.translate[GEA.language]["SECONDS"]else a6=a6 .." "..GEA.translate[GEA.language]["SECOND"]end end;return{a5,a6}end;GEA.sendActions=function(n)GEA.log("sendActions",n,GEA.translate[GEA.language]["ACTIONS"],true)local a7=false;if type(n[GEA.keys["PARAMS"]])=="table"then for l=1,#n[GEA.keys["PARAMS"]]do if type(n[GEA.keys["PARAMS"]][l])=="table"and string.lower(n[GEA.keys["PARAMS"]][l][1])=="turnoff"or string.lower(n[GEA.keys["PARAMS"]][l][1])=="turnon"or string.lower(n[GEA.keys["PARAMS"]][l][1])=="switch"then local a=GEA.getId(n,n[GEA.keys["PARAMS"]][l])if a>0 then local a8=fibaro:getValue(tonumber(a),"value")local a9=fibaro:getType(tonumber(a))if GEA.match(a9,"rgb_driver")and tonumber(fibaro:getValue(tonumber(a),"value"))>0 or tonumber(fibaro:getValue(tonumber(a),"currentProgramID"))>0 then a8=1 elseif GEA.match(a9,"com.fibaro.FGRGBW441M")then if fibaro:getValue(tonumber(a),"color")~="0,0,0,0"or tonumber(fibaro:getValue(tonumber(a),"currentProgramID"))>0 then a8=1 end end;if tonumber(a8)>=1 and string.lower(n[GEA.keys["PARAMS"]][l][1])=="turnoff"or tonumber(a8)==0 and string.lower(n[GEA.keys["PARAMS"]][l][1])=="turnon"then fibaro:call(tonumber(a),n[GEA.keys["PARAMS"]][l][1])elseif string.lower(n[GEA.keys["PARAMS"]][l][1])=="switch"then local aa="turnOff"if tonumber(a8)==0 then aa="turnOn"end;fibaro:call(tonumber(a),aa)end;GEA.log("sendActions",n,"!ACTION! : "..n[GEA.keys["PARAMS"]][l][1],true)end end;if type(n[GEA.keys["PARAMS"]][l])=="table"and string.lower(n[GEA.keys["PARAMS"]][l][1])=="global"and#n[GEA.keys["PARAMS"]][l]>2 then local a1=string.match(n[GEA.keys["PARAMS"]][l][3],"(%d+)")if GEA.match(n[GEA.keys["PARAMS"]][l][3],"inc%+")then local ab=tonumber(fibaro:getGlobalValue(n[GEA.keys["PARAMS"]][l][2]))if type(a1)~="nil"then fibaro:setGlobal(n[GEA.keys["PARAMS"]][l][2],ab+a1)else fibaro:setGlobal(n[GEA.keys["PARAMS"]][l][2],ab+1)end elseif GEA.match(n[GEA.keys["PARAMS"]][l][3],"dec%-")then local ab=tonumber(fibaro:getGlobalValue(n[GEA.keys["PARAMS"]][l][2]))if type(a1)~="nil"then fibaro:setGlobal(n[GEA.keys["PARAMS"]][l][2],ab-a1)else fibaro:setGlobal(n[GEA.keys["PARAMS"]][l][2],ab-1)end else fibaro:setGlobal(n[GEA.keys["PARAMS"]][l][2],GEA.getMessage(n,n[GEA.keys["PARAMS"]][l][3]))end;GEA.log("sendActions",n,"!ACTION! : setGlobal "..n[GEA.keys["PARAMS"]][l][2]..","..GEA.getMessage(n,n[GEA.keys["PARAMS"]][l][3]),true)elseif type(n[GEA.keys["PARAMS"]][l])=="table"and string.lower(n[GEA.keys["PARAMS"]][l][1])=="portable"and#n[GEA.keys["PARAMS"]][l]>1 then fibaro:call(tonumber(n[GEA.keys["PARAMS"]][l][2]),"sendPush",GEA.getMessage(n,nil))GEA.log("sendActions",n,"!ACTION! : pushed to "..n[GEA.keys["PARAMS"]][l][2],true)a7=true elseif type(n[GEA.keys["PARAMS"]][l])=="table"and string.lower(n[GEA.keys["PARAMS"]][l][1])=="email"and#n[GEA.keys["PARAMS"]][l]>1 then local ac="GEA Notification"if#n[GEA.keys["PARAMS"]][l]>2 then ac=n[GEA.keys["PARAMS"]][l][3]end;fibaro:call(tonumber(n[GEA.keys["PARAMS"]][l][2]),"sendEmail",GEA.getMessage(n,ac),GEA.getMessage(n,nil))GEA.log("sendActions",n,"!ACTION! : email to "..n[GEA.keys["PARAMS"]][l][2],true)elseif type(n[GEA.keys["PARAMS"]][l])=="table"and string.lower(n[GEA.keys["PARAMS"]][l][1])=="picture"and#n[GEA.keys["PARAMS"]][l]>2 then local ad=tonumber(n[GEA.keys["PARAMS"]][l][3])local ae=tonumber(n[GEA.keys["PARAMS"]][l][2])fibaro:call(ae,"sendPhotoToUser",ad)GEA.log("sendActions",n,"!ACTION! : email picture from camera "..ae.." to "..ad,true)elseif type(n[GEA.keys["PARAMS"]][l])=="table"and string.lower(n[GEA.keys["PARAMS"]][l][1])=="scenario"and#n[GEA.keys["PARAMS"]][l]>1 then fibaro:startScene(n[GEA.keys["PARAMS"]][l][2])GEA.log("sendActions",n,"!ACTION! : Scene "..n[GEA.keys["PARAMS"]][l][2],true)elseif type(n[GEA.keys["PARAMS"]][l])=="table"and string.lower(n[GEA.keys["PARAMS"]][l][1])=="stopscenario"and#n[GEA.keys["PARAMS"]][l]>1 then if fibaro:countScenes(n[GEA.keys["PARAMS"]][l][2])then fibaro:killScene(n[GEA.keys["PARAMS"]][l][2])GEA.log("sendActions",n,"!ACTION! : Stop Scene "..n[GEA.keys["PARAMS"]][l][2],true)else GEA.log("sendActions",n,"!ACTION! : No Stop Scene "..n[GEA.keys["PARAMS"]][l][2],true)end elseif type(n[GEA.keys["PARAMS"]][l])=="table"and string.lower(n[GEA.keys["PARAMS"]][l][1])=="enablescenario"and#n[GEA.keys["PARAMS"]][l]>1 then fibaro:setSceneEnabled(n[GEA.keys["PARAMS"]][l][2],true)GEA.log("sendActions",n,"!ACTION! : Scene enabled "..n[GEA.keys["PARAMS"]][l][2],true)elseif type(n[GEA.keys["PARAMS"]][l])=="table"and string.lower(n[GEA.keys["PARAMS"]][l][1])=="disablescenario"and#n[GEA.keys["PARAMS"]][l]>1 then fibaro:setSceneEnabled(n[GEA.keys["PARAMS"]][l][2],false)GEA.log("sendActions",n,"!ACTION! : Scene disabled "..n[GEA.keys["PARAMS"]][l][2],true)elseif type(n[GEA.keys["PARAMS"]][l])=="table"and string.lower(n[GEA.keys["PARAMS"]][l][1])=="function"then local _,a0=pcall(n[GEA.keys["PARAMS"]][l][2])if _ then GEA.log("sendActions",n,"!ACTION! : Function OK",true)else GEA.log("sendActions",n,"!ACTION! : Function "..tostring(a0 or"Inconnu."),true)end elseif type(n[GEA.keys["PARAMS"]][l])=="table"and string.lower(n[GEA.keys["PARAMS"]][l][1])=="setarmed"and#n[GEA.keys["PARAMS"]][l]>1 then fibaro:call(n[GEA.keys["PARAMS"]][l][2],"setArmed",1)GEA.log("sendActions",n,"!ACTION! : setArmed "..n[GEA.keys["PARAMS"]][l][2],true)elseif type(n[GEA.keys["PARAMS"]][l])=="table"and string.lower(n[GEA.keys["PARAMS"]][l][1])=="setdisarmed"and#n[GEA.keys["PARAMS"]][l]>1 then fibaro:call(n[GEA.keys["PARAMS"]][l][2],"setArmed",0)GEA.log("sendActions",n,"!ACTION! : setDisarmed "..n[GEA.keys["PARAMS"]][l][2],true)elseif type(n[GEA.keys["PARAMS"]][l])=="table"and string.lower(n[GEA.keys["PARAMS"]][l][1])=="currenticon"and#n[GEA.keys["PARAMS"]][l]>2 then fibaro:call(n[GEA.keys["PARAMS"]][l][2],"setProperty","currentIcon",tostring(n[GEA.keys["PARAMS"]][l][3]))GEA.log("sendActions",n,"!ACTION! : CurrentIcon "..n[GEA.keys["PARAMS"]][l][2],true)elseif type(n[GEA.keys["PARAMS"]][l])=="table"and string.lower(n[GEA.keys["PARAMS"]][l][1])=="copyglobal"and#n[GEA.keys["PARAMS"]][l]>2 then fibaro:setGlobal(n[GEA.keys["PARAMS"]][l][3],fibaro:getGlobalValue(n[GEA.keys["PARAMS"]][l][2]))GEA.log("sendActions",n,"!ACTION! : CopyGlobal "..n[GEA.keys["PARAMS"]][l][2],true)elseif type(n[GEA.keys["PARAMS"]][l])=="table"and string.lower(n[GEA.keys["PARAMS"]][l][1])=="restarttask"and#n[GEA.keys["PARAMS"]][l]>1 then GEA.addOrRemoveTask("R",n[GEA.keys["PARAMS"]][l][2],true)GEA.log("sendActions",n,"!ACTION! : Restart "..n[GEA.keys["PARAMS"]][l][2],true)elseif type(n[GEA.keys["PARAMS"]][l])=="table"and string.lower(n[GEA.keys["PARAMS"]][l][1])=="stoptask"and#n[GEA.keys["PARAMS"]][l]>1 then GEA.addOrRemoveTask("S",n[GEA.keys["PARAMS"]][l][2],true)GEA.log("sendActions",n,"!ACTION! : StopTask "..n[GEA.keys["PARAMS"]][l][2],true)elseif type(n[GEA.keys["PARAMS"]][l])=="table"and string.lower(n[GEA.keys["PARAMS"]][l][1])=="wakeup"and#n[GEA.keys["PARAMS"]][l]>1 then fibaro:wakeUpDeadDevice(n[GEA.keys["PARAMS"]][l][2])GEA.log("sendActions",n,"!ACTION! : WakeUp "..n[GEA.keys["PARAMS"]][l][2],true)elseif type(n[GEA.keys["PARAMS"]][l])=="table"and string.lower(n[GEA.keys["PARAMS"]][l][1])=="virtualdevice"and#n[GEA.keys["PARAMS"]][l]>2 then fibaro:call(n[GEA.keys["PARAMS"]][l][2],"pressButton",tostring(n[GEA.keys["PARAMS"]][l][3]))GEA.log("sendActions",n,"!ACTION! : VirtualDevice "..n[GEA.keys["PARAMS"]][l][2]..","..n[GEA.keys["PARAMS"]][l][3],true)elseif type(n[GEA.keys["PARAMS"]][l])=="table"and string.lower(n[GEA.keys["PARAMS"]][l][1])=="slider"and#n[GEA.keys["PARAMS"]][l]>3 then fibaro:call(n[GEA.keys["PARAMS"]][l][2],"setSlider",n[GEA.keys["PARAMS"]][l][3],n[GEA.keys["PARAMS"]][l][4])GEA.log("sendActions",n,"!ACTION! : Slider "..n[GEA.keys["PARAMS"]][l][2]..","..n[GEA.keys["PARAMS"]][l][3].."="..n[GEA.keys["PARAMS"]][l][4],true)elseif type(n[GEA.keys["PARAMS"]][l])=="table"and string.lower(n[GEA.keys["PARAMS"]][l][1])=="label"and#n[GEA.keys["PARAMS"]][l]>3 then fibaro:call(n[GEA.keys["PARAMS"]][l][2],"setProperty","ui."..n[GEA.keys["PARAMS"]][l][3]..".value",GEA.getMessage(n,n[GEA.keys["PARAMS"]][l][4]))GEA.log("sendActions",n,"!ACTION! : Label "..n[GEA.keys["PARAMS"]][l][2]..","..n[GEA.keys["PARAMS"]][l][3].." = "..GEA.getMessage(n,n[GEA.keys["PARAMS"]][l][4]),true)elseif type(n[GEA.keys["PARAMS"]][l])=="table"and string.lower(n[GEA.keys["PARAMS"]][l][1])=="rgb"and#n[GEA.keys["PARAMS"]][l]>5 then if n[GEA.keys["PARAMS"]][l][3]==-1 or n[GEA.keys["PARAMS"]][l][4]==-1 or n[GEA.keys["PARAMS"]][l][5]==-1 or n[GEA.keys["PARAMS"]][l][6]==-1 then if n[GEA.keys["PARAMS"]][l][3]~=-1 then fibaro:call(n[GEA.keys["PARAMS"]][l][2],"setR",n[GEA.keys["PARAMS"]][l][3])end;if n[GEA.keys["PARAMS"]][l][4]~=-1 then fibaro:call(n[GEA.keys["PARAMS"]][l][2],"setG",n[GEA.keys["PARAMS"]][l][4])end;if n[GEA.keys["PARAMS"]][l][5]~=-1 then fibaro:call(n[GEA.keys["PARAMS"]][l][2],"setB",n[GEA.keys["PARAMS"]][l][5])end;if n[GEA.keys["PARAMS"]][l][6]~=-1 then fibaro:call(n[GEA.keys["PARAMS"]][l][2],"setW",n[GEA.keys["PARAMS"]][l][6])end else fibaro:call(n[GEA.keys["PARAMS"]][l][2],"setColor",n[GEA.keys["PARAMS"]][l][3],n[GEA.keys["PARAMS"]][l][4],n[GEA.keys["PARAMS"]][l][5],n[GEA.keys["PARAMS"]][l][6])end;GEA.log("sendActions",n,"!ACTION! : RGB "..n[GEA.keys["PARAMS"]][l][2]..", Color = "..n[GEA.keys["PARAMS"]][l][3]..","..n[GEA.keys["PARAMS"]][l][4]..","..n[GEA.keys["PARAMS"]][l][5]..","..n[GEA.keys["PARAMS"]][l][6])elseif type(n[GEA.keys["PARAMS"]][l])=="table"and string.lower(n[GEA.keys["PARAMS"]][l][1])=="program"and#n[GEA.keys["PARAMS"]][l]>2 then if tonumber(fibaro:getValue(tonumber(n[GEA.keys["PARAMS"]][l][2]),"currentProgramID"))~=tonumber(n[GEA.keys["PARAMS"]][l][3])then fibaro:call(n[GEA.keys["PARAMS"]][l][2],"startProgram",n[GEA.keys["PARAMS"]][l][3])end;GEA.log("sendActions",n,"!ACTION! : startProgram "..n[GEA.keys["PARAMS"]][l][2]..", program = "..n[GEA.keys["PARAMS"]][l][3])elseif type(n[GEA.keys["PARAMS"]][l])=="table"and string.lower(n[GEA.keys["PARAMS"]][l][1])=="value"then local a=GEA.getId(n,n[GEA.keys["PARAMS"]][l])if a>0 then if#n[GEA.keys["PARAMS"]][l]>2 then fibaro:call(a,"setValue",n[GEA.keys["PARAMS"]][l][3])GEA.log("sendActions",n,"!ACTION! : setValue "..n[GEA.keys["PARAMS"]][l][3],true)else fibaro:call(a,"setValue",n[GEA.keys["PARAMS"]][l][2])GEA.log("sendActions",n,"!ACTION! : setValue "..n[GEA.keys["PARAMS"]][l][2],true)end end elseif type(n[GEA.keys["PARAMS"]][l])=="table"and string.lower(n[GEA.keys["PARAMS"]][l][1])=="open"or string.lower(n[GEA.keys["PARAMS"]][l][1])=="close"then local a=GEA.getId(n,n[GEA.keys["PARAMS"]][l])if a>0 then local af=100;if#n[GEA.keys["PARAMS"]][l]>2 then if string.lower(n[GEA.keys["PARAMS"]][l][1])=="close"then af=af-n[GEA.keys["PARAMS"]][l][3]else af=n[GEA.keys["PARAMS"]][l][3]end;fibaro:call(a,"setValue",af)GEA.log("sendActions",n,"!ACTION! : setValue "..af,true)elseif#n[GEA.keys["PARAMS"]][l]>1 then if string.lower(n[GEA.keys["PARAMS"]][l][1])=="close"then af=af-n[GEA.keys["PARAMS"]][l][2]else af=n[GEA.keys["PARAMS"]][l][2]end;fibaro:call(a,"setValue",af)GEA.log("sendActions",n,"!ACTION! : setValue "..af,true)else fibaro:call(a,n[GEA.keys["PARAMS"]][l][1])GEA.log("sendActions",n,"!ACTION! :  "..n[GEA.keys["PARAMS"]][l][1],true)end end end end end;if n[GEA.keys["MESSAGE"]]~=""and not a7 then if n[GEA.keys["MESSAGE"]]=="debug"then fibaro:debug("=============="..os.time().."=====================")else for l=1,#GEA.portables do fibaro:call(tonumber(GEA.portables[l]),"sendPush",GEA.getMessage(n,nil))GEA.log("sendActions",n,"!ACTION! : sendPush "..GEA.getMessage(n,nil),true)end end end end;GEA.getId=function(n,ag)local a=0;if ag and type(ag)=="table"and#ag>1 and string.lower(ag[1])=="turnoff"or string.lower(ag[1])=="turnon"or string.lower(ag[1])=="switch"then a=tonumber(ag[2])elseif ag and type(ag)=="table"and#ag>2 and string.lower(ag[1])=="value"or string.lower(ag[1])=="open"or string.lower(ag[1])=="close"then a=tonumber(ag[2])elseif type(n[GEA.keys["ID"]])=="number"then a=n[GEA.keys["ID"]]elseif type(n[GEA.keys["ID"]])=="table"and string.lower(n[GEA.keys["ID"]][1])=="sensor+"or string.lower(n[GEA.keys["ID"]][1])=="sensor-"or string.lower(n[GEA.keys["ID"]][1])=="value-"or string.lower(n[GEA.keys["ID"]][1])=="value+"or string.lower(n[GEA.keys["ID"]][1])=="dead"then a=tonumber(n[GEA.keys["ID"]][2])end;if a==0 then fibaro:debug("pas trouve")end;return a end;GEA.pause=function()local ah=true;if#GEA.getGlobalForActivation>0 then ah=false;if fibaro:getGlobalValue(GEA.getGlobalForActivation[1])==GEA.getGlobalForActivation[2]then ah=true else GEA.log("Run",nil,GEA.translate[GEA.language]["GEA_SUSPENDED"].." "..GEA.getGlobalForActivation[1].." "..GEA.translate[GEA.language]["VALUE"].." "..fibaro:getGlobalValue(GEA.getGlobalForActivation[1]).." "..GEA.translate[GEA.language]["REQUERIED"].." "..GEA.getGlobalForActivation[2],true)end end;return not ah end;GEA.run=function()if config then config()end;if setEvents then setEvents()end;if GEA.isVersionFour then GEA.power="power"end;GEA.log("GEA Version "..GEA.version,nil," "..GEA.translate[GEA.language]["RUNNING"].."...",true,"green")if#GEA.todo==0 then if GEA.source["type"]~="property"then GEA.log(GEA.translate[GEA.language]["RUN"],nil,GEA.translate[GEA.language]["NOTHING_TODO"],true)else GEA.log(GEA.translate[GEA.language]["RUN"],nil,GEA.translate[GEA.language]["NOTHING_TODOID"]..GEA.source["deviceID"],true)end;return false end;local ai=#GEA.todo;if GEA.source["type"]=="autostart"then if GEA.useTasksGlobal then fibaro:setGlobal(GEA.globalTasks,GEA.suspended)else GEA.tasks=GEA.suspended end;local aj=GEA.checkEvery;local ak=1;local al=true;local am=os.time()while true do GEA.log(GEA.translate[GEA.language]["RUN"],nil,GEA.translate[GEA.language]["SLEEPING"].." "..GEA.checkEvery.." "..GEA.translate[GEA.language]["SECONDS"],false)fibaro:sleep(aj*1000)local an=os.time()local ao=GEA.checkAllToDo(ai)local ap=ao-an;if al then ap=ap*2;al=false end;aj=GEA.checkEvery-ap;if ak>=10 then local Y=GEA.translate[GEA.language]["RUN_FOR"]..ap.."s "..GEA.translate[GEA.language]["RUN_NEW"]..aj.."s / "..GEA.translate[GEA.language]["RUN_SINCE"].." "..GEA.getDureeInString(os.time()-am)[1]fibaro:debug("<span style=\"color:CadetBlue; padding-left:125px; display:inline-block; width:80%; margin-top:-18px; padding-top:-18px; text-align:left;\">"..Y.."</span>")ak=0 end;ak=ak+1 end else GEA.checkAllToDo(ai)end end;GEA.checkAllToDo=function(ai)if not GEA.pause()then for l=1,ai do GEA.log(GEA.translate[GEA.language]["RUN"],GEA.todo[l],GEA.translate[GEA.language]["CHECKING"],false)if GEA.catchError then if not pcall(function()GEA.check(GEA.todo[l],l)end)then GEA.log(GEA.translate[GEA.language]["ERROR"],GEA.todo[l],GEA.translate[GEA.language]["CHECKING"],true,red)end else GEA.check(GEA.todo[l],l)end end end;return os.time()end;GEA.log=function(aq,n,c,ar,as)if ar or GEA.debug then local Y=""local j="If"if not n and not ar then return elseif n then local at=type(n[GEA.keys["ID"]])if n[GEA.keys["NAME"]]then j=n[GEA.keys["NAME"]]if type(j)=="table"then j=j[1]end;j=j.." ] "if at=="nil"or at=="boolean"then Y=Y.."[ "..j elseif at=="number"then Y=Y.."[ "..n[GEA.keys["ID"]].." | "..j elseif at=="table"then lowerId=string.lower(n[GEA.keys["ID"]][1])if GEA.match(lowerId,"global|global.")then Y=Y.."[ "..n[GEA.keys["ID"]][2].."="..n[GEA.keys["ID"]][3].." ] "elseif lowerId=="batteries"then Y=Y.."[ "..n[GEA.keys["ID"]][2].." ] "elseif lowerId=="group"then Y=Y.."[ "..j elseif GEA.match(lowerId,"sensor|sensor.|value|value.|dead|sceneactivation|battery")then Y=Y.."[ "..j elseif GEA.match(lowerId,"slider|slider.|label|label.|property|property.")then Y=Y.."[ "..j elseif lowerId=="weather"then Y=Y.."[ Weather ] "elseif lowerId=="function"then Y=Y.."[ Function ] "elseif lowerId=="alarm"then Y=Y.."Alarm "..fibaro:getValue(tonumber(n[GEA.keys["ID"]][2]),"ui.lblAlarme.value")else end end end end;if aq and aq~=""then Y=Y..string.format("%-20s",aq)..": "end;if c and c~=""then Y=Y..string.format("%-20s",c)end;if n then if n[GEA.keys["INDEX"]]then Y=Y.." (ID: "..n[GEA.keys["INDEX"]]..")"end;if n[GEA.keys["PARAMS"]]and type(n[GEA.keys["PARAMS"]])=="table"and#n[GEA.keys["PARAMS"]]>0 then for l=1,#n[GEA.keys["PARAMS"]]do Y=Y.." ["local au=n[GEA.keys["PARAMS"]][l]if type(au)=="table"then for a3=1,#au do if string.lower(au[1])=="if"then if a3==1 then Y=Y.."If..."end elseif string.lower(au[1])=="function"then if a3==1 then Y=Y.."Function..."end else Y=Y..au[a3]..","end end end;Y=Y:sub(1,Y:len()-1).."]"end end end;fibaro:debug("<span style=\"color:"..(as or"white").."; padding-left: 125px; display:inline-block; width:80%; margin-top:-18px; padding-top:-18px; text-align:left;\">"..Y.."</span>")end end end;GEA.run()