--[[
%% autostart
%% properties
%% globals
--]]


-- v 5.40
-- ==================================================
-- GEA : Gestionnaire d'Evénements Automatique
-- ==================================================
-- [FR] Scénario permettant de contrôler si un périphérique est 
-- activé depuis trop longtemps ou lancer un push d'avertissement.
-- Ce scénario permet une annotation plus simple que le code LUA
-- il nécessite néanmoins quelques connaissances.
--
-- [EN] This scene allow you to check every X second the status
-- of a module and send actions if the module is activated since too long.
-- This scene allow you a more simple annotation than LUA
-- it requires some knowledge
--
-- Auteur : Steven P. with modifications of Hansolo and Shyrka973
-- Version : 5.40
-- Special Thanks to :
-- jompa68, Fredric, Diuck, Domodial, moicphil, lolomail, byackee,
-- JossAlf, Did,  sebcbien, chris6783 and all other guy from Domotique-fibaro.fr
-- ------------------------------------------------------------
-- Historique / History
-- ------------------------------------------------------------
-- L'historique complet est diponible ici / the full history is available here :
-- http://www.domotique-fibaro.fr/index.php/topic/1082-gea-gestionnaire-dévénements-automatique/?p=12428



-- Paramétrage de GEA / GEA configuration
function config()
  GEA.isVersionFour           = true -- On est en version 4.017 Beta ou supérieure / 
  GEA.language                = "FR" -- Votre langue : FR (default) / Your language : EN
  GEA.checkEvery              = 30 -- On vérifie toutes les X secondes  (default : 30) / Check every X seconds
  GEA.portables               = {179} -- Liste des portables devant recevoir une notification {70, 71} / Smartphones you want to be notified
  GEA.debug                   = false -- Affichage des traces dans la console (default : false) / Show trace in the debug window
  -- GEA.getGlobalForActivation = {"SuspendreGEA", "non"} -- active ou désactive l'exécution de GEA via une variable globale / active or deactive GEA execution with a global variable
  -- GEA.catchError             = false
  GEA.optimize                = GEA.typeOptimize["IMMEDIATE_ONLY"]
  -- option : GEA.typeOptimize["NONE"], GEA.typeOptimize["IMMEDIATE_ONLY"], GEA.typeOptimize["ALL"]
  -- permet d'optimiser les soucis liés au getName et getRoom de fibaro mais n'affiche plus le nom des modules concernés.
end 



-- Ajouter ici les événements à exécuter / Add here events to schedule
-- Une liste d'exemples est disponible dans un fichier annexe samples.lua / A samples list is available in another file called samples.lua
function setEvents() 



end



-- ==================================================
--
--  NE PLUS RIEN TOUCHER / DON'T TOUCH UNDER THIS POINT
--
-- ==================================================
--
-- SCRIPT GEA PRINCIPAL / GEA MAIN SCRIPT
--
-- ==================================================
if not GEA then GEA={}GEA.version="5.40"GEA.language="FR"GEA.checkEvery=30;GEA.index=0;GEA.isVersionFour=true;GEA.globalTasks="GEA_Tasks"GEA.regexFullAllow=false;GEA.portables={}GEA.todo={}GEA.power="valueSensor"GEA.suspended=""GEA.keys={ID=1,SECONDES=2,MESSAGE=3,ISREPEAT=4,PARAMS=5,NAME=6,NBRUN=7,DONE=8,VALUE=9,GROUPS=10,OK=11,TOTALRUNS=12,INDEX=13,MAXTIME=14,ROOM=15}GEA.debug=false;GEA.catchError=true;GEA.pos=1;GEA.useTasksGlobal=true;GEA.tasks=""GEA.typeOptimize={NONE=0,IMMEDIATE_ONLY=1,ALL=2}GEA.optimize=GEA.typeOptimize["NONE"]GEA.getGlobalForActivation={}GEA.source=fibaro:getSourceTrigger()GEA.translate={true,true}GEA.translate["FR"]={ACTIONS="traitement des actions",ACTIVATED="activé",ACTIVATED_SINCE="activé depuis ",ADDED_DIRECT="ajout de la tâche pour lancement instantané",ADDED_FOR="ajout de la tâche pour",ALWAYS="Toujours",BATTERIE="Pile faible",CHECKING="vérification",CHECKING_DATE="vérification des dates",CHECKING_TIME="vérification plage horaire",CHECK_IF="vérification de l'exception",CHECK_IF_FAILED="désactivé par exception",CHECK_MAIN="vérification de l'activation",CHECK_STARTED="démarrage vérification",CURRENT_TIME="L'heure actuelle",DATE_NOT_ALLOWED="n'est pas dans la plage de dates spécifiées",DESACTIVATED="désactivé",DEVICE_NOT_FOUND="ID non trouvé",DONE="tâche effectuée et suspendue",ERROR="!!! ERREUR !!!",ERROR_IF="IF malformé",GEA_SUSPENDED="Scénario suspendu par la variable globale ",HOUR="heure",HOURS="heures",MINUTE="minute",MINUTES="minutes",NOTHING_TODO="aucun traitement à effectuer",NOTHING_TODOID="aucun traitement à effectuer pour l'ID :",NOT_INCLUDED="n'est pas inclus dans",REQUIRED="attendu",RESTART="Redémarrage",RUN="En cours",RUNNING="en exécution",RUN_FOR="Durée des traitements : ",RUN_NEW="nouveau délai : ",RUN_SINCE="tourne depuis",SECOND="seconde",SECONDS="secondes",SLEEPING="Endormi pendant",SUPSENDED="Arrêtée",SUSPEND_ERROR="ERROR GEA.Suspend demande un tableau en paramètre 2",TIME_IN="vérification contrôlée car dans la plage horaire spécifiée ",TIME_NOT_ALLOWED="n'est pas autorisée",TIME_OUT="vérification ignorée car en dehors de la plage horaire : ",TODAY="Aujourd'hui ",TODAY_NOT_DST="Aujourd'hui n'est pas en mode DST",VALUE="valeur",WILL_SUSPEND="entrainera la suspension de"}GEA.translate["EN"]={ACTIONS="doing actions",ACTIVATED="activated",ACTIVATED_SINCE="activated since ",ADDED_DIRECT="task added for instant run",ADDED_FOR="task added for",ALWAYS="Always",BATTERIE="Low batterie",CHECKING="checking",CHECKING_DATE="checking dates",CHECKING_TIME="checking time range",CHECK_IF="'if' checking",CHECK_IF_FAILED="'if' stop the check",CHECK_MAIN="activation checking",CHECK_STARTED="starting checking",CURRENT_TIME="Current hour",DATE_NOT_ALLOWED="is not in the specified dates range",DESACTIVATED="desactivated",DEVICE_NOT_FOUND="Device ID not found",DONE="task done and suspended",ERROR="!!! ERROR !!!",ERROR_IF="IF malformed",GEA_SUSPENDED="Scene suspended by the global variable ",HOUR="hour",HOURS="hours",MINUTE="minute",MINUTES="minutes",NOTHING_TODO="nothing to do",NOTHING_TODOID="nothing to do for ID:",NOT_INCLUDED="is not included in",REQUIRED="excepted",RESTART="Restart",RUN="Run",RUNNING="Running",RUN_FOR="Duration : ",RUN_NEW="new delay : ",RUN_SINCE="running since",SECOND="second",SECONDS="seconds",SLEEPING="Sleeping for",SUPSENDED="Stopped",SUSPEND_ERROR="ERROR GEA.Suspend require a table as second parameter",TIME_IN="checking done time range is ok ",TIME_NOT_ALLOWED="is not allowed",TIME_OUT="checking abort because out of time range: ",TODAY="Today ",TODAY_NOT_DST="Today is not in DST mode",VALUE="value",WILL_SUSPEND="will suspend "}GEA.add=function(a,b,c,d)local e=false;local f=false;local g=-1;local h={}local i={}local j={}local k={}if d and#d>0 then for l=1,#d do lowCapsArg=string.lower(d[l][1])if lowCapsArg=="repeat"then e=true elseif lowCapsArg=="maxtime"then g=tonumber(d[l][2])elseif lowCapsArg=="group"then h[tonumber(d[l][2])]=true elseif lowCapsArg=="notstarted"then f=true end end;i=d end;if g>-1 then e=true end;GEA.index=GEA.index+1;if type(a)=="table"then if type(a[1])=="number"or type(a[1])=="table"then local m={}for l=2,#a do table.insert(m,a[l])j[l],k[l]=GEA.getName(a[l])end;a=a[1]if type(a)=="table"and type(a[1])=="string"and string.lower(a[1])=="alarm"then e=false;b=1 end;table.insert(i,{"If",m})elseif type(a[1])=="string"then if string.lower(a[1])=="global"and#a>2 and a[2]==""and a[3]==""then a=true elseif string.lower(a[1])=="alarm"then e=false;b=1 end end end;j[1],k[1]=GEA.getName(a)local n={a,b,c,e,i,j,0,false,{},h,false,0,GEA.index,g,k}if GEA.source["type"]=="autostart"and tonumber(n[GEA.keys["SECONDES"]])>=0 then GEA.insert(n)GEA.log("Add Autostart",n,GEA.translate[GEA.language]["ADDED_FOR"].." "..b.." "..GEA.translate[GEA.language]["SECONDS"],true,"grey")if f then local o=GEA.getCode("S",n[GEA.keys["INDEX"]])if GEA.suspended~=nil then GEA.suspended=string.gsub(GEA.suspended,o,"")end;GEA.suspended=GEA.suspended..o end elseif GEA.source["type"]=="global"and tonumber(n[GEA.keys["SECONDES"]])<0 then if type(n[GEA.keys["ID"]])=="table"and GEA.match(string.lower(n[GEA.keys["ID"]][1]),"global|global.")and n[GEA.keys["ID"]][2]==GEA.source["name"]then GEA.insert(n)GEA.log("Add Global",n,GEA.translate[GEA.language]["ADDED_DIRECT"],true,"grey")end elseif GEA.source["type"]=="property"and tonumber(n[GEA.keys["SECONDES"]])<0 then local a=0;if type(n[GEA.keys["ID"]])=="number"then a=n[GEA.keys["ID"]]elseif type(n[GEA.keys["ID"]])=="table"then a=n[GEA.keys["ID"]][2]if string.lower(n[GEA.keys["ID"]][1])=="sceneactivation"and#n[GEA.keys["ID"]]>2 then if tonumber(fibaro:getValue(a,"sceneActivation"))~=tonumber(n[GEA.keys["ID"]][3])then a=-1 end end end;if tonumber(a)==tonumber(GEA.source["deviceID"])then GEA.insert(n)GEA.log("Add Property",n,GEA.translate[GEA.language]["ADDED_DIRECT"],true,"grey")end end;return n[GEA.keys["INDEX"]]end;GEA.insert=function(n)GEA.todo[GEA.pos]=n;GEA.pos=GEA.pos+1;return n[GEA.keys["INDEX"]]end;GEA.addOrRemoveTask=function(p,index,add)local q=nil;local o=GEA.getCode(p,index)if GEA.useTasksGlobal then q=fibaro:getGlobalValue(GEA.globalTasks)else q=GEA.tasks end;if q~=nil then q=string.gsub(q,o,"")end;if add then if GEA.useTasksGlobal then fibaro:setGlobal(GEA.globalTasks,q..o)else GEA.tasks=q..o end else if GEA.useTasksGlobal then fibaro:setGlobal(GEA.globalTasks,q)else GEA.tasks=q end end end;GEA.isTask=function(p,index)local q=nil;local o=GEA.getCode(p,index)if GEA.useTasksGlobal then q=fibaro:getGlobalValue(GEA.globalTasks)else q=GEA.tasks end;if q~=nil then return string.match(q,o)end;return nil end;GEA.getCode=function(p,index)return"|"..p.."_"..index.."|"end;GEA.getName=function(a)if GEA.optimize==GEA.typeOptimize["ALL"]or GEA.source["type"]~="autostart"and GEA.optimize==GEA.typeOptimize["IMMEDIATE_ONLY"]then return"n/a","n/a"end;local k=""if type(a)=="nil"or type(a)=="boolean"then return GEA.translate[GEA.language]["ALWAYS"],""elseif type(a)=="number"then return fibaro:getName(tonumber(a)),GEA.getRoom(tonumber(a))elseif type(a)=="table"and GEA.match(string.lower(a[1]),"global|global.")then return a[2],""elseif type(a)=="table"then lowerCaps=string.lower(a[1])if a[2]then idNumeric=tonumber(a[2])end;if lowerCaps=="batteries"then return"Batteries <= "..a[1],""elseif lowerCaps=="sceneactivation"then return"Scene ["..a[2].."|"..fibaro:getName(idNumeric).."] = "..a[3],GEA.getRoom(idNumeric)elseif lowerCaps=="sensor"then return"Sensor ["..a[2].."|"..fibaro:getName(idNumeric).."] = "..a[3],GEA.getRoom(idNumeric)elseif lowerCaps=="sensor+"then return"Sensor ["..a[2].."|"..fibaro:getName(idNumeric).."] > "..a[3],GEA.getRoom(idNumeric)elseif lowerCaps=="sensor-"then return"Sensor ["..a[2].."|"..fibaro:getName(idNumeric).."] < "..a[3],GEA.getRoom(idNumeric)elseif lowerCaps=="sensor!"then return"Sensor ["..a[2].."|"..fibaro:getName(idNumeric).."] ~= "..a[3],GEA.getRoom(idNumeric)elseif lowerCaps=="battery"then return"["..a[2].."|"..fibaro:getName(idNumeric).."] <= "..a[3],GEA.getRoom(idNumeric)elseif lowerCaps=="value"then return"Value ["..a[2].."|"..fibaro:getName(idNumeric).."] = "..a[3],GEA.getRoom(idNumeric)elseif lowerCaps=="value+"then return"Value ["..a[2].."|"..fibaro:getName(idNumeric).."] > "..a[3],GEA.getRoom(idNumeric)elseif lowerCaps=="value-"then return"Value ["..a[2].."|"..fibaro:getName(idNumeric).."] < "..a[3],GEA.getRoom(idNumeric)elseif lowerCaps=="value!"then return"Value ["..a[2].."|"..fibaro:getName(idNumeric).."] ~= "..a[3],GEA.getRoom(idNumeric)elseif lowerCaps=="dead"then return"Dead ["..a[2].."|"..fibaro:getName(idNumeric).."]",GEA.getRoom(idNumeric)elseif lowerCaps=="slider"then return"Slider ["..a[2].."|"..a[3].."] = "..a[4],GEA.getRoom(idNumeric)elseif lowerCaps=="slider+"then return"Slider ["..a[2].."|"..a[3].."] > "..a[4],GEA.getRoom(idNumeric)elseif lowerCaps=="slider-"then return"Slider ["..a[2].."|"..a[3].."] < "..a[4],GEA.getRoom(idNumeric)elseif lowerCaps=="slider!"then return"Slider ["..a[2].."|"..a[3].."] ~= "..a[4],GEA.getRoom(idNumeric)elseif lowerCaps=="label"then return"Label ["..a[2].."|"..a[3].."] = "..a[4],GEA.getRoom(idNumeric)elseif lowerCaps=="label!"then return"Label ["..a[2].."|"..a[3].."] ~= "..a[4],GEA.getRoom(idNumeric)elseif lowerCaps=="function"then return"Function",""elseif lowerCaps=="weather"then return"Weather",""elseif lowerCaps=="alarm"then return"Alarm "..fibaro:getValue(idNumeric,"ui.lblAlarme.value"),""elseif lowerCaps=="property"then return"Property ["..a[2].."|"..a[3].."] = "..a[4],GEA.getRoom(idNumeric)elseif lowerCaps=="property!"then return"Property ["..a[2].."|"..a[3].."] ~= "..a[4],GEA.getRoom(idNumeric)elseif lowerCaps=="group"then return"Group ["..a[2].."]",""else end end end;GEA.getRoom=function(a)local r=fibaro:getRoomID(a)if type(r)=="number"then local s=fibaro:getRoomName(r)if type(s)=="string"then return s end end;return""end;GEA.checkDay=function(t)local u=false;jours=t;jours=string.gsub(jours,"All","Weekday,Weekend")jours=string.gsub(jours,"Weekday","Monday,Tuesday,Wednesday,Thursday,Friday")jours=string.gsub(jours,"Weekend","Saturday,Sunday")if string.find(string.lower(jours),string.lower(os.date("%A")))then u=true end;return u end;GEA.checkTimes=function(n)GEA.log("Check",n,GEA.translate[GEA.language]["CHECKING_DATE"],false)if not n[GEA.keys["PARAMS"]]then return true end;local v=true;local u=true;local w=true;local x=true;local jours=""if type(n[GEA.keys["PARAMS"]])=="table"then for l=1,#n[GEA.keys["PARAMS"]]do local y=n[GEA.keys["PARAMS"]][l]if type(y)=="table"then if string.lower(y[1])=="days"then u=GEA.checkDay(y[2])elseif string.lower(y[1])=="dst"then x=os.date("*t",os.time()).isdst elseif string.lower(y[1])=="notdst"then x=not os.date("*t",os.time()).isdst elseif string.lower(y[1])=="dates"then w=false;local z=os.date("%Y%m%d")local A=y[2]if string.len(A)==5 then A=A.."/"..os.date("%Y")end;A=string.format("%04d",GEA.split(A,"/")[3])..string.format("%02d",GEA.split(A,"/")[2])..string.format("%02d",GEA.split(A,"/")[1])local B=y[3]if string.len(B)==5 then B=B.."/"..os.date("%Y")end;B=string.format("%04d",GEA.split(B,"/")[3])..string.format("%02d",GEA.split(B,"/")[2])..string.format("%02d",GEA.split(B,"/")[1])w=tonumber(z)>=tonumber(A)and tonumber(z)<=tonumber(B)end end end end;if u and x then local C=false;for l=1,#n[GEA.keys["PARAMS"]]do local y=n[GEA.keys["PARAMS"]][l]if type(y)=="table"and string.lower(y[1])=="dates"then if not C then w=false end;local z=os.date("%Y%m%d")local A=y[2]if string.len(A)==5 then A=A.."/"..os.date("%Y")end;A=string.format("%04d",GEA.split(A,"/")[3])..string.format("%02d",GEA.split(A,"/")[2])..string.format("%02d",GEA.split(A,"/")[1])local B=y[3]if string.len(B)==5 then B=B.."/"..os.date("%Y")end;B=string.format("%04d",GEA.split(B,"/")[3])..string.format("%02d",GEA.split(B,"/")[2])..string.format("%02d",GEA.split(B,"/")[1])if tonumber(A)>tonumber(B)and tonumber(A)>tonumber(z)then A=tonumber(A)-10000 end;if tonumber(z)>=tonumber(A)and tonumber(z)<=tonumber(B)then w=true;C=true end end end end;if u and x and w then for l=1,#n[GEA.keys["PARAMS"]]do local y=n[GEA.keys["PARAMS"]][l]if type(y)=="table"and string.lower(y[1])=="time"then v=false;if GEA.checkTime(n,GEA.flatTime(y[2]).."-"..GEA.flatTime(y[3]))then return true end end end else if not u then GEA.log("!CANCEL! CheckTimes",n,GEA.translate[GEA.language]["TODAY"].." "..os.date("%A").." "..GEA.translate[GEA.language]["NOT_INCLUDED"].." "..jours,false,"yellow")elseif not x then GEA.log("!CANCEL! CheckTimes",n,GEA.translate[GEA.language]["TODAY_NOT_DST"],false,"yellow")elseif not w then GEA.log("!CANCEL! CheckTimes",n,GEA.translate[GEA.language]["TODAY"].." "..os.date("%x").." "..GEA.translate[GEA.language]["DATE_NOT_ALLOWED"],false,"yellow")end end;if not v then GEA.log("!CANCEL! CheckTimes",n,GEA.translate[GEA.language]["CURRENT_TIME"].." "..os.date("%H:%M").." "..GEA.translate[GEA.language]["TIME_NOT_ALLOWED"],false,"yellow")end;return v and w and u and x end;GEA.flatTime=function(time)local D=string.lower(time)D=string.gsub(D," ","")D=string.gsub(D,"h",":")D=string.gsub(D,"sunset",fibaro:getValue(1,"sunsetHour"))D=string.gsub(D,"sunrise",fibaro:getValue(1,"sunriseHour"))if string.find(D,"<")then D=GEA.flatTime(GEA.split(D,"<")[1]).."<"..GEA.flatTime(GEA.split(D,"<")[2])end;if string.find(D,">")then D=GEA.flatTime(GEA.split(D,">")[1])..">"..GEA.flatTime(GEA.split(D,">")[2])end;if string.find(D,"+")then local time=GEA.split(D,"+")[1]local add=GEA.split(D,"+")[2]local E=os.date("*t")local F=GEA.split(time,":")[2]local G=os.time{year=E.year,month=E.month,day=E.day,hour=tonumber(GEA.split(time,":")[1]),min=tonumber(GEA.split(time,":")[2]),sec=0}G=G+add*60;D=os.date("*t",G)D=string.format("%02d",D.hour)..":"..string.format("%02d",D.min)elseif string.find(D,"-")then local time=GEA.split(D,"-")[1]local add=GEA.split(D,"-")[2]local E=os.date("*t")local G=os.time{year=E.year,month=E.month,day=E.day,hour=tonumber(GEA.split(time,":")[1]),min=tonumber(GEA.split(time,":")[2]),sec=0}G=G-add*60;D=os.date("*t",G)D=string.format("%02d",D.hour)..":"..string.format("%02d",D.min)elseif string.find(D,"<")then local H=GEA.split(D,"<")[1]local I=GEA.split(D,"<")[2]H=string.format("%02d",GEA.split(H,":")[1])..":"..string.format("%02d",GEA.split(H,":")[2])I=string.format("%02d",GEA.split(I,":")[1])..":"..string.format("%02d",GEA.split(I,":")[2])if H<I then D=H else D=I end elseif string.find(D,">")then local H=GEA.split(D,">")[1]local I=GEA.split(D,">")[2]H=string.format("%02d",GEA.split(H,":")[1])..":"..string.format("%02d",GEA.split(H,":")[2])I=string.format("%02d",GEA.split(I,":")[1])..":"..string.format("%02d",GEA.split(I,":")[2])if H>I then D=H else D=I end else D=string.format("%02d",GEA.split(D,":")[1])..":"..string.format("%02d",GEA.split(D,":")[2])end;return D end;GEA.checkTime=function(n,J)GEA.log("CheckTime",n,GEA.translate[GEA.language]["CHECKING_TIME"].." "..J,false)if not J or J==""then return true end;local A=string.sub(J,1,5)local B=string.sub(J,7,11)local z=os.date("%H:%M")local K=false;if B<A then K=z>=A or z<=B else K=z>=A and z<=B end;if not K then GEA.log("CheckTime",n,GEA.translate[GEA.language]["TIME_OUT"]..J,false,"yellow")else GEA.log("CheckTime",n,GEA.translate[GEA.language]["TIME_IN"]..J,false)end;return K end;GEA.split=function(L,M)local M,N=M or":",{}local O=string.format("([^%s]+)",M)L:gsub(O,function(P)N[#N+1]=P end)return N end;GEA.trim=function(Q)return Q:gsub("^%s*(.-)%s*$","%1")end;GEA.match=function(Q,R)if type(Q)=="nil"then return type(R)=="nil"end;Q=tostring(Q)R=tostring(R):gsub("%%","%%%%"):gsub("-","%%-")local S=GEA.split(R,"|")for l=1,#S do if not GEA.regexFullAllow then S[l]="^"..S[l].."$"end;if string.match(Q,GEA.trim(S[l]))then return true end end;return false end;GEA.check=function(n,index)GEA.log("Check",n,GEA.translate[GEA.language]["CHECK_STARTED"],false)if GEA.isTask("R",n[GEA.keys["INDEX"]])~=nil then GEA.log("Check",n,GEA.translate[GEA.language]["RESTART"],true)n[GEA.keys["NBRUN"]]=0;n[GEA.keys["TOTALRUNS"]]=0;n[GEA.keys["DONE"]]=false;n[GEA.keys["OK"]]=false;GEA.addOrRemoveTask("R",n[GEA.keys["INDEX"]],false)GEA.addOrRemoveTask("S",n[GEA.keys["INDEX"]],false)end;if GEA.isTask("S",n[GEA.keys["INDEX"]])~=nil then GEA.log("Check",n,GEA.translate[GEA.language]["SUPSENDED"],true)return end;if not n[GEA.keys["DONE"]]then n[GEA.keys["OK"]]=false end;if GEA.checkTimes(n)then if GEA.isActivated(n,1,n)then if n[GEA.keys["SECONDES"]]<0 then local T=GEA.isTask("M",n[GEA.keys["INDEX"]].."{(%d+)}")if T~=nil then n[GEA.keys["TOTALRUNS"]]=tonumber(T)GEA.addOrRemoveTask("M",n[GEA.keys["INDEX"]].."{(%d+)}",false)end end;if n[GEA.keys["NBRUN"]]then n[GEA.keys["NBRUN"]]=n[GEA.keys["NBRUN"]]+1;n[GEA.keys["TOTALRUNS"]]=n[GEA.keys["TOTALRUNS"]]+1 else n[GEA.keys["NBRUN"]]=0;n[GEA.keys["TOTALRUNS"]]=0 end;if not n[GEA.keys["DONE"]]then GEA.log("Check",n,GEA.translate[GEA.language]["ACTIVATED_SINCE"]..n[GEA.keys["TOTALRUNS"]]*GEA.checkEvery.."/"..n[GEA.keys["SECONDES"]],false)end;if n[GEA.keys["SECONDES"]]<0 and n[GEA.keys["MAXTIME"]]==-1 or n[GEA.keys["TOTALRUNS"]]-1<n[GEA.keys["MAXTIME"]]then GEA.sendActions(n)end;if n[GEA.keys["SECONDES"]]<0 and n[GEA.keys["MAXTIME"]]>-1 then GEA.addOrRemoveTask("M",n[GEA.keys["INDEX"]].."{(%d+)}",false)if n[GEA.keys["TOTALRUNS"]]>=n[GEA.keys["MAXTIME"]]then GEA.addOrRemoveTask("S",n[GEA.keys["INDEX"]],true)else GEA.addOrRemoveTask("M",n[GEA.keys["INDEX"]].."{"..n[GEA.keys["TOTALRUNS"]].."}",true)end end else n[GEA.keys["NBRUN"]]=0;n[GEA.keys["TOTALRUNS"]]=0;n[GEA.keys["DONE"]]=false;n[GEA.keys["OK"]]=false end;if GEA.source["type"]=="autostart"and n[GEA.keys["NBRUN"]]*GEA.checkEvery>=n[GEA.keys["SECONDES"]]and not n[GEA.keys["DONE"]]and n[GEA.keys["MAXTIME"]]==-1 or n[GEA.keys["TOTALRUNS"]]-1<n[GEA.keys["MAXTIME"]]then GEA.sendActions(n)n[GEA.keys["OK"]]=true;if n[GEA.keys["ISREPEAT"]]and n[GEA.keys["MAXTIME"]]==-1 then elseif n[GEA.keys["MAXTIME"]]==-1 or n[GEA.keys["TOTALRUNS"]]>=n[GEA.keys["MAXTIME"]]then GEA.log("Done",n,GEA.translate[GEA.language]["DONE"],true,"DarkSlateBlue")n[GEA.keys["DONE"]]=true end;n[GEA.keys["NBRUN"]]=0 end else n[GEA.keys["NBRUN"]]=0;n[GEA.keys["TOTALRUNS"]]=0;n[GEA.keys["DONE"]]=false;n[GEA.keys["OK"]]=false end end;GEA.isActivated=function(n,U,V)if U==1 then GEA.log("isActivated",n,GEA.translate[GEA.language]["CHECK_MAIN"],false)else GEA.log("isActivated",n,GEA.translate[GEA.language]["CHECK_IF"],false)end;local W=-1;local a=n[GEA.keys["ID"]]local X=true;local Y=type(a)if Y=="nil"then X=true;V[GEA.keys["VALUE"]][U]="true"elseif Y=="boolean"then X=a;if X then V[GEA.keys["VALUE"]][U]="true"else V[GEA.keys["VALUE"]][U]="false"end elseif Y=="number"then local type=fibaro:getType(tonumber(a))GEA.log("isActivated",n,"type : "..type,false)if GEA.match(type,"door_sensor|water_sensor|motion_sensor|com.fibaro.FGMS001|com.fibaro.doorSensor|com.fibaro.waterSensor|com.fibaro.motionSensor")then X=tonumber(fibaro:getValue(tonumber(a),"value"))>=1;if not X and GEA.source["type"]=="autostart"and fibaro:getValue(tonumber(a),"lastBreached")~=""then X=os.time()-tonumber(fibaro:getValue(tonumber(a),"lastBreached"))<GEA.checkEvery elseif not X and GEA.source["type"]=="autostart"and fibaro:getModificationTime(tonumber(a),"value")then X=os.time()-tonumber(fibaro:getModificationTime(tonumber(a),"value"))<GEA.checkEvery end elseif GEA.match(type,"dimmable_light|binary_light|rgb_driver|com.fibaro.FGRGBW441M|com.fibaro.multilevelSwitch|com.fibaro.binarySwitch")then if GEA.match(type,"rgb_driver")then X=tonumber(fibaro:getValue(tonumber(a),"value"))>0 or tonumber(fibaro:getValue(tonumber(a),"currentProgramID"))>0 elseif GEA.match(type,"com.fibaro.FGRGBW441M")then X=tonumber(fibaro:getValue(tonumber(a),"value"))>0 and not fibaro:getValue(tonumber(a),"color")=="0,0,0,0"or tonumber(fibaro:getValue(tonumber(a),"currentProgramID"))>0 else X=tonumber(fibaro:getValue(tonumber(a),"value"))>0 end;if not X and GEA.source["type"]=="autostart"and fibaro:getModificationTime(tonumber(a),"value")then X=os.time()-tonumber(fibaro:getModificationTime(tonumber(a),"value"))<GEA.checkEvery end elseif type=="blind"then X=tonumber(fibaro:getValue(tonumber(a),"value"))>0 else X=tonumber(fibaro:getValue(tonumber(a),"value"))==1 end;W=tonumber(a)V[GEA.keys["VALUE"]][U]=fibaro:getValue(tonumber(a),"value")elseif Y=="table"then local Z=string.lower(a[1])if Z=="global"and#a>2 then GEA.log("isActivated",n,"type : global variable",false)X=GEA.match(fibaro:getGlobalValue(a[2]),a[3])V[GEA.keys["VALUE"]][U]=fibaro:getGlobalValue(a[2])elseif Z=="global+"and#a>2 then GEA.log("isActivated",n,"type : Global+",false)X=tonumber(fibaro:getGlobalValue(a[2]))>tonumber(a[3])V[GEA.keys["VALUE"]][U]=fibaro:getGlobalValue(a[2])elseif Z=="global-"and#a>2 then GEA.log("isActivated",n,"type : Global-",false)X=tonumber(fibaro:getGlobalValue(a[2]))<tonumber(a[3])V[GEA.keys["VALUE"]][U]=fibaro:getGlobalValue(a[2])elseif Z=="global!"and#a>2 then GEA.log("isActivated",n,"type : Global!",false)X=not GEA.match(fibaro:getGlobalValue(a[2]),a[3])V[GEA.keys["VALUE"]][U]=fibaro:getGlobalValue(a[2])elseif Z=="slider"and#a>3 then GEA.log("isActivated",n,"type : Slider",false)X=tonumber(fibaro:getValue(a[2],"ui."..a[3]..".value"))==tonumber(a[4])V[GEA.keys["VALUE"]][U]=fibaro:getValue(a[2],"ui."..a[3]..".value")elseif Z=="slider-"and#a>3 then GEA.log("isActivated",n,"type : Slider-",false)X=tonumber(fibaro:getValue(a[2],"ui."..a[3]..".value"))<tonumber(a[4])V[GEA.keys["VALUE"]][U]=fibaro:getValue(a[2],"ui."..a[3]..".value")elseif Z=="slider!"and#a>3 then GEA.log("isActivated",n,"type : Slider!",false)X=tonumber(fibaro:getValue(a[2],"ui."..a[3]..".value"))~=tonumber(a[4])V[GEA.keys["VALUE"]][U]=fibaro:getValue(a[2],"ui."..a[3]..".value")elseif Z=="slider+"and#a>3 then GEA.log("isActivated",n,"type : Slider+",false)X=tonumber(fibaro:getValue(a[2],"ui."..a[3]..".value"))>tonumber(a[4])V[GEA.keys["VALUE"]][U]=fibaro:getValue(a[2],"ui."..a[3]..".value")elseif Z=="label"and#a>3 then GEA.log("isActivated",n,"type : Label",false)X=GEA.match(fibaro:getValue(a[2],"ui."..a[3]..".value"),a[4])V[GEA.keys["VALUE"]][U]=fibaro:getValue(a[2],"ui."..a[3]..".value")elseif Z=="label!"and#a>3 then GEA.log("isActivated",n,"type : Label!",false)X=not GEA.match(fibaro:getValue(a[2],"ui."..a[3]..".value"),a[4])V[GEA.keys["VALUE"]][U]=fibaro:getValue(a[2],"ui."..a[3]..".value")elseif Z=="property"and#a>3 then GEA.log("isActivated",n,"type : Property",false)X=GEA.match(fibaro:getValue(a[2],a[3]),a[4])V[GEA.keys["VALUE"]][U]=fibaro:getValue(a[2],a[3])elseif Z=="property!"and#a>3 then GEA.log("isActivated",n,"type : Property",false)X=not GEA.match(fibaro:getValue(a[2],a[3]),a[4])V[GEA.keys["VALUE"]][U]=fibaro:getValue(a[2],a[3])elseif Z=="batteries"and#a>1 then GEA.log("isActivated",n,"type : batteries",false)local _=""for l=1,1000 do local a0=fibaro:getValue(l,'batteryLevel')if type(a0)~=nil and tonumber(a0)~=nil and tonumber(a0)<=tonumber(a[2])or tonumber(a0)==255 then GEA.log("isActivated",n,"checking : batteries "..fibaro:getName(l),false)if not string.find(fibaro:getName(l),"Zwave_")then _=_..GEA.translate[GEA.language]["BATTERIE"].." ["..fibaro:getName(l).."] "..a0 .."%\n"X=true end end end;V[GEA.keys["VALUE"]][U]=a[2]n[GEA.keys["MESSAGE"]]=_ elseif(Z=="sensor"or Z=="power")and#a>2 then GEA.log("isActivated",n,"type : Sensor",false)X=tonumber(fibaro:getValue(tonumber(a[2]),GEA.power))==tonumber(a[3])W=tonumber(a[2])V[GEA.keys["VALUE"]][U]=fibaro:getValue(tonumber(a[2]),GEA.power)elseif(Z=="sensor+"or Z=="power+")and#a>2 then GEA.log("isActivated",n,"type : Sensor+",false)X=tonumber(fibaro:getValue(tonumber(a[2]),GEA.power))>tonumber(a[3])W=tonumber(a[2])V[GEA.keys["VALUE"]][U]=fibaro:getValue(tonumber(a[2]),GEA.power)elseif(Z=="sensor-"or Z=="power-")and#a>2 then GEA.log("isActivated",n,"type : Sensor-",false)X=tonumber(fibaro:getValue(tonumber(a[2]),GEA.power))<tonumber(a[3])W=tonumber(a[2])V[GEA.keys["VALUE"]][U]=fibaro:getValue(tonumber(a[2]),GEA.power)elseif(Z=="sensor!"or Z=="power!")and#a>2 then GEA.log("isActivated",n,"type : Sensor!",false)X=tonumber(fibaro:getValue(tonumber(a[2]),GEA.power))~=tonumber(a[3])W=tonumber(a[2])V[GEA.keys["VALUE"]][U]=fibaro:getValue(tonumber(a[2]),GEA.power)elseif Z=="battery"and#a>2 then GEA.log("isActivated",n,"type : Battery",false)X=false;local a0=fibaro:getValue(tonumber(a[2]),'batteryLevel')if type(a0)~=nil and tonumber(a0)<=tonumber(a[3])or tonumber(a0)==255 then X=true;V[GEA.keys["VALUE"]][U]=a0 end;W=tonumber(a[2])elseif Z=="value"and#a>2 then GEA.log("isActivated",n,"type : Value",false)X=tonumber(fibaro:getValue(tonumber(a[2]),"value"))==tonumber(a[3])W=tonumber(a[2])V[GEA.keys["VALUE"]][U]=fibaro:getValue(tonumber(a[2]),"value")elseif Z=="value+"and#a>2 then GEA.log("isActivated",n,"type : Value+",false)X=tonumber(fibaro:getValue(tonumber(a[2]),"value"))>tonumber(a[3])W=tonumber(a[2])V[GEA.keys["VALUE"]][U]=fibaro:getValue(tonumber(a[2]),"value")elseif Z=="value-"and#a>2 then GEA.log("isActivated",n,"type : Value-",false)X=tonumber(fibaro:getValue(tonumber(a[2]),"value"))<tonumber(a[3])W=tonumber(a[2])V[GEA.keys["VALUE"]][U]=fibaro:getValue(tonumber(a[2]),"value")elseif Z=="value!"and#a>2 then GEA.log("isActivated",n,"type : Value!",false)X=tonumber(fibaro:getValue(tonumber(a[2]),"value"))~=tonumber(a[3])W=tonumber(a[2])V[GEA.keys["VALUE"]][U]=fibaro:getValue(tonumber(a[2]),"value")elseif Z=="dead"and#a>1 then GEA.log("isActivated",n,"type : isDead",false)X=tonumber(fibaro:getValue(tonumber(a[2]),"dead"))>=1;V[GEA.keys["VALUE"]][U]=fibaro:getValue(tonumber(a[2]),"dead")elseif Z=="weather"and#a>1 then GEA.log("isActivated",n,"type : weather",false)X=GEA.match(fibaro:getValue(3,"WeatherConditionConverted"),a[2])V[GEA.keys["VALUE"]][U]=fibaro:getValue(3,"WeatherConditionConverted")elseif Z=="function"and#a>1 then GEA.log("isActivated",n,"type : Function",false)local a1,a2,a3=pcall(a[2])if a1 then X=a2;if a3 then V[GEA.keys["VALUE"]][U]=a3 end else X=false end elseif Z=="group"and#a>1 then GEA.log("isActivated",n,"type : Group",false)for l=1,#GEA.todo do if GEA.todo[l][GEA.keys["GROUPS"]][tonumber(a[2])]then if not GEA.todo[l][GEA.keys["OK"]]then X=false end end end;V[GEA.keys["VALUE"]][U]=fibaro:getValue(tonumber(a[2]),"")elseif Z=="alarm"then GEA.log("isActivated",n,"type : alarm",false)local time=fibaro:getValue(tonumber(a[2]),"ui.lblAlarme.value")if not(type(time)=="nil"or time==""or time=="--:--")then X=GEA.checkTime(n,GEA.flatTime(time).."-"..GEA.flatTime(time))if X then local jours=fibaro:getValue(tonumber(a[2]),"ui.lblJours.value")local t=""if string.find(jours,"Lu")or string.find(jours,"Mo")then t=t.."Monday"end;if string.find(jours,"Ma")or string.find(jours,"Tu")then t=t.."Tuesday"end;if string.find(jours,"Me")or string.find(jours,"We")then t=t.."Wednesday"end;if string.find(jours,"Je")or string.find(jours,"Th")then t=t.."Thursday"end;if string.find(jours,"Ve")or string.find(jours,"Fr")then t=t.."Friday"end;if string.find(jours,"Sa")or string.find(jours,"Sa")then t=t.."Saturday"end;if string.find(jours,"Di")or string.find(jours,"Su")then t=t.."Sunday"end;X=GEA.checkDay(t)end;V[GEA.keys["VALUE"]][U]=time else X=false end end else end;if U==1 then for l=1,#n[GEA.keys["PARAMS"]]do if string.lower(n[GEA.keys["PARAMS"]][l][1])=="inverse"then X=not X end end;if W>-1 and type(n[GEA.keys["PARAMS"]])=="table"then for l=1,#n[GEA.keys["PARAMS"]]do local y=n[GEA.keys["PARAMS"]][l]if string.lower(y[1])=="armed"then X=X and tonumber(fibaro:getValue(W,"armed"))>0;if#y>1 then X=X and tonumber(fibaro:getValue(y[2],"armed"))>0 end elseif string.lower(y[1])=="disarmed"then X=X and tonumber(fibaro:getValue(W,"armed"))==0;if#y>1 then X=X and tonumber(fibaro:getValue(y[2],"armed"))==0 end end end end;if X then for l=1,#n[GEA.keys["PARAMS"]]do local y=n[GEA.keys["PARAMS"]][l]if type(y)=="table"and string.lower(y[1])=="if"then local a4=true;for a5=1,#y[2]do if type(y[2])=="table"then if not GEA.isActivated({y[2][a5]},a5+1,n)then a4=false;GEA.log("!CANCEL! isActivated",n,GEA.translate[GEA.language]["CHECK_IF_FAILED"],false,"yellow")end else GEA.log(GEA.translate[GEA.language]["ERROR"],n,GEA.translate[GEA.language]["ERROR_IF"],true,"red")end end;X=a4 end end end end;if X then GEA.log("isActivated",n,GEA.translate[GEA.language]["ACTIVATED"],false)else GEA.log("!CANCEL! isActivated",n,GEA.translate[GEA.language]["DESACTIVATED"],false,"yellow")end;return X end;GEA.getMessage=function(n,c)local _=""if n[GEA.keys["MESSAGE"]]then _=n[GEA.keys["MESSAGE"]]end;if c and c~=""then _=c end;if n[GEA.keys["VALUE"]][1]then _=string.gsub(_,"#value#",n[GEA.keys["VALUE"]][1])_=string.gsub(_,"#value%[1%]#",n[GEA.keys["VALUE"]][1])end;if n[GEA.keys["VALUE"]][2]then _=string.gsub(_,"#value%[2%]#",n[GEA.keys["VALUE"]][2])end;if n[GEA.keys["VALUE"]][3]then _=string.gsub(_,"#value%[3%]#",n[GEA.keys["VALUE"]][3])end;if n[GEA.keys["VALUE"]][4]then _=string.gsub(_,"#value%[4%]#",n[GEA.keys["VALUE"]][4])end;if n[GEA.keys["VALUE"]][5]then _=string.gsub(_,"#value%[5%]#",n[GEA.keys["VALUE"]][5])end;if n[GEA.keys["VALUE"]][6]then _=string.gsub(_,"#value%[6%]#",n[GEA.keys["VALUE"]][6])end;if n[GEA.keys["VALUE"]][7]then _=string.gsub(_,"#value%[7%]#",n[GEA.keys["VALUE"]][7])end;if n[GEA.keys["VALUE"]][8]then _=string.gsub(_,"#value%[8%]#",n[GEA.keys["VALUE"]][8])end;if n[GEA.keys["VALUE"]][9]then _=string.gsub(_,"#value%[9%]#",n[GEA.keys["VALUE"]][9])end;_=string.gsub(_,"#time#",os.date("%X"))_=string.gsub(_,"#date#",os.date("%x"))if n[GEA.keys["NAME"]][1]then _=string.gsub(_,"#name#",n[GEA.keys["NAME"]][1])_=string.gsub(_,"#name%[1%]#",n[GEA.keys["NAME"]][1])end;if n[GEA.keys["NAME"]][2]then _=string.gsub(_,"#name%[2%]#",n[GEA.keys["NAME"]][2])end;if n[GEA.keys["NAME"]][3]then _=string.gsub(_,"#name%[3%]#",n[GEA.keys["NAME"]][3])end;if n[GEA.keys["NAME"]][4]then _=string.gsub(_,"#name%[4%]#",n[GEA.keys["NAME"]][4])end;if n[GEA.keys["NAME"]][5]then _=string.gsub(_,"#name%[5%]#",n[GEA.keys["NAME"]][5])end;if n[GEA.keys["NAME"]][6]then _=string.gsub(_,"#name%[6%]#",n[GEA.keys["NAME"]][6])end;if n[GEA.keys["NAME"]][7]then _=string.gsub(_,"#name%[7%]#",n[GEA.keys["NAME"]][7])end;if n[GEA.keys["NAME"]][8]then _=string.gsub(_,"#name%[8%]#",n[GEA.keys["NAME"]][8])end;if n[GEA.keys["NAME"]][9]then _=string.gsub(_,"#name%[9%]#",n[GEA.keys["NAME"]][9])end;if n[GEA.keys["ROOM"]][1]then _=string.gsub(_,"#room#",n[GEA.keys["ROOM"]][1])_=string.gsub(_,"#room%[1%]#",n[GEA.keys["ROOM"]][1])end;if n[GEA.keys["ROOM"]][2]then _=string.gsub(_,"#room%[2%]#",n[GEA.keys["ROOM"]][2])end;if n[GEA.keys["ROOM"]][3]then _=string.gsub(_,"#room%[3%]#",n[GEA.keys["ROOM"]][3])end;if n[GEA.keys["ROOM"]][4]then _=string.gsub(_,"#room%[4%]#",n[GEA.keys["ROOM"]][4])end;if n[GEA.keys["ROOM"]][5]then _=string.gsub(_,"#room%[5%]#",n[GEA.keys["ROOM"]][5])end;if n[GEA.keys["ROOM"]][6]then _=string.gsub(_,"#room%[6%]#",n[GEA.keys["ROOM"]][6])end;if n[GEA.keys["ROOM"]][7]then _=string.gsub(_,"#room%[7%]#",n[GEA.keys["ROOM"]][7])end;if n[GEA.keys["ROOM"]][8]then _=string.gsub(_,"#room%[8%]#",n[GEA.keys["ROOM"]][8])end;if n[GEA.keys["ROOM"]][9]then _=string.gsub(_,"#room%[9%]#",n[GEA.keys["ROOM"]][9])end;_=string.gsub(_,"#seconds#",n[GEA.keys["SECONDES"]])local a6=GEA.getDureeInString(n[GEA.keys["TOTALRUNS"]]*GEA.checkEvery)_=string.gsub(_,"#duration#",a6[1])_=string.gsub(_,"#durationfull#",a6[2])_=string.gsub(_,"#runs#",n[GEA.keys["TOTALRUNS"]])return _ end;GEA.getDureeInString=function(a7)local a7=a7;local a8=""nHours=math.floor(a7/3600)nMins=math.floor(a7/60-nHours*60)nSecs=math.floor(a7-nHours*3600-nMins*60)a7=""if nHours>0 then a7=a7 ..nHours.."h "a8=a8 ..nHours;if nHours>1 then a8=a8 .." "..GEA.translate[GEA.language]["HOURS"]else a8=a8 .." "..GEA.translate[GEA.language]["HOUR"]end end;if nMins>0 then a7=a7 ..nMins.."m "if nHours>0 then a8=a8 .." "end;if nSecs==0 and nHours>0 then a8=a8 .."et "end;a8=a8 ..nMins;if nMins>1 then a8=a8 .." "..GEA.translate[GEA.language]["MINUTES"]else a8=a8 .." "..GEA.translate[GEA.language]["MINUTE"]end end;if nSecs>0 then a7=a7 ..nSecs.."s"if nMins>0 then a8=a8 .." et "end;a8=a8 ..nSecs;if nSecs>1 then a8=a8 .." "..GEA.translate[GEA.language]["SECONDS"]else a8=a8 .." "..GEA.translate[GEA.language]["SECOND"]end end;return{a7,a8}end;GEA.sendActions=function(n)GEA.log("sendActions",n,GEA.translate[GEA.language]["ACTIONS"],true)local a9=false;if type(n[GEA.keys["PARAMS"]])=="table"then for l=1,#n[GEA.keys["PARAMS"]]do local aa=n[GEA.keys["PARAMS"]][l]if type(aa)=="table"then local Z=string.lower(aa[1])if Z=="turnoff"or Z=="turnon"or Z=="switch"then local a=GEA.getId(n,aa)if a>0 then local ab=fibaro:getValue(tonumber(a),"value")local ac=fibaro:getType(tonumber(a))if GEA.match(ac,"rgb_driver")and tonumber(fibaro:getValue(tonumber(a),"value"))>0 or tonumber(fibaro:getValue(tonumber(a),"currentProgramID"))>0 then ab=1 elseif GEA.match(ac,"com.fibaro.FGRGBW441M")then if fibaro:getValue(tonumber(a),"color")~="0,0,0,0"or tonumber(fibaro:getValue(tonumber(a),"currentProgramID"))>0 then ab=1 end end;if tonumber(ab)>=1 and Z=="turnoff"or tonumber(ab)==0 and Z=="turnon"then fibaro:call(tonumber(a),aa[1])elseif Z=="switch"then local ad="turnOff"if tonumber(ab)==0 then ad="turnOn"end;fibaro:call(tonumber(a),ad)end;GEA.log("sendActions",n,"!ACTION! : "..aa[1],true)end end;if Z=="global"and#aa>2 then local a3=string.match(aa[3],"(%d+)")if GEA.match(aa[3],"inc%+")then local ae=tonumber(fibaro:getGlobalValue(aa[2]))if type(a3)~="nil"then fibaro:setGlobal(aa[2],ae+a3)else fibaro:setGlobal(aa[2],ae+1)end elseif GEA.match(aa[3],"dec%-")then local ae=tonumber(fibaro:getGlobalValue(aa[2]))if type(a3)~="nil"then fibaro:setGlobal(aa[2],ae-a3)else fibaro:setGlobal(aa[2],ae-1)end else fibaro:setGlobal(aa[2],GEA.getMessage(n,aa[3]))end;GEA.log("sendActions",n,"!ACTION! : setGlobal "..aa[2]..","..GEA.getMessage(n,aa[3]),true)elseif Z=="portable"and#aa>1 then fibaro:call(tonumber(aa[2]),"sendPush",GEA.getMessage(n,nil))GEA.log("sendActions",n,"!ACTION! : pushed to "..aa[2],true)a9=true elseif Z=="email"and#aa>1 then local af="GEA Notification"if#aa>2 then af=aa[3]end;fibaro:call(tonumber(aa[2]),"sendEmail",GEA.getMessage(n,af),GEA.getMessage(n,nil))GEA.log("sendActions",n,"!ACTION! : email to "..aa[2],true)elseif Z=="picture"and#aa>2 then local ag=tonumber(aa[3])local ah=tonumber(aa[2])fibaro:call(ah,"sendPhotoToUser",ag)GEA.log("sendActions",n,"!ACTION! : email picture from camera "..ah.." to "..ag,true)elseif Z=="scenario"and#aa>1 then fibaro:startScene(aa[2])GEA.log("sendActions",n,"!ACTION! : Scene "..aa[2],true)elseif Z=="stopscenario"and#aa>1 then if fibaro:countScenes(aa[2])then fibaro:killScene(aa[2])GEA.log("sendActions",n,"!ACTION! : Stop Scene "..aa[2],true)else GEA.log("sendActions",n,"!ACTION! : No Stop Scene "..aa[2],true)end elseif Z=="enablescenario"and#aa>1 then fibaro:setSceneEnabled(aa[2],true)GEA.log("sendActions",n,"!ACTION! : Scene enabled "..aa[2],true)elseif Z=="disablescenario"and#aa>1 then fibaro:setSceneEnabled(aa[2],false)GEA.log("sendActions",n,"!ACTION! : Scene disabled "..aa[2],true)elseif Z=="function"then local a1,a2=pcall(aa[2])if a1 then GEA.log("sendActions",n,"!ACTION! : Function OK",true)else GEA.log("sendActions",n,"!ACTION! : Function "..tostring(a2 or"Inconnu."),true)end elseif Z=="setarmed"and#aa>1 then fibaro:call(aa[2],"setArmed",1)GEA.log("sendActions",n,"!ACTION! : setArmed "..aa[2],true)elseif Z=="setdisarmed"and#aa>1 then fibaro:call(aa[2],"setArmed",0)GEA.log("sendActions",n,"!ACTION! : setDisarmed "..aa[2],true)elseif Z=="currenticon"and#aa>2 then fibaro:call(aa[2],"setProperty","currentIcon",tostring(aa[3]))GEA.log("sendActions",n,"!ACTION! : CurrentIcon "..aa[2],true)elseif Z=="copyglobal"and#aa>2 then fibaro:setGlobal(aa[3],fibaro:getGlobalValue(aa[2]))GEA.log("sendActions",n,"!ACTION! : CopyGlobal "..aa[2],true)elseif Z=="restarttask"and#aa>1 then GEA.addOrRemoveTask("R",aa[2],true)GEA.log("sendActions",n,"!ACTION! : Restart "..aa[2],true)elseif Z=="stoptask"and#aa>1 then GEA.addOrRemoveTask("S",aa[2],true)GEA.log("sendActions",n,"!ACTION! : StopTask "..aa[2],true)elseif Z=="wakeup"and#aa>1 then fibaro:wakeUpDeadDevice(aa[2])GEA.log("sendActions",n,"!ACTION! : WakeUp "..aa[2],true)elseif Z=="virtualdevice"and#aa>2 then fibaro:call(aa[2],"pressButton",tostring(aa[3]))GEA.log("sendActions",n,"!ACTION! : VirtualDevice "..aa[2]..","..aa[3],true)elseif Z=="slider"and#aa>3 then fibaro:call(aa[2],"setSlider",aa[3],aa[4])GEA.log("sendActions",n,"!ACTION! : Slider "..aa[2]..","..aa[3].."="..aa[4],true)elseif Z=="label"and#aa>3 then fibaro:call(aa[2],"setProperty","ui."..aa[3]..".value",GEA.getMessage(n,aa[4]))GEA.log("sendActions",n,"!ACTION! : Label "..aa[2]..","..aa[3].." = "..GEA.getMessage(n,aa[4]),true)elseif Z=="rgb"and#aa>5 then if aa[3]==-1 or aa[4]==-1 or aa[5]==-1 or aa[6]==-1 then if aa[3]~=-1 then fibaro:call(aa[2],"setR",aa[3])end;if aa[4]~=-1 then fibaro:call(aa[2],"setG",aa[4])end;if aa[5]~=-1 then fibaro:call(aa[2],"setB",aa[5])end;if aa[6]~=-1 then fibaro:call(aa[2],"setW",aa[6])end else fibaro:call(aa[2],"setColor",aa[3],aa[4],aa[5],aa[6])end;GEA.log("sendActions",n,"!ACTION! : RGB "..aa[2]..", Color = "..aa[3]..","..aa[4]..","..aa[5]..","..aa[6])elseif Z=="program"and#aa>2 then if tonumber(fibaro:getValue(tonumber(aa[2]),"currentProgramID"))~=tonumber(aa[3])then fibaro:call(aa[2],"startProgram",aa[3])end;GEA.log("sendActions",n,"!ACTION! : startProgram "..aa[2]..", program = "..aa[3])elseif Z=="value"then local a=GEA.getId(n,aa)if a>0 then if#aa>2 then fibaro:call(a,"setValue",aa[3])GEA.log("sendActions",n,"!ACTION! : setValue "..aa[3],true)else fibaro:call(a,"setValue",aa[2])GEA.log("sendActions",n,"!ACTION! : setValue "..aa[2],true)end end elseif Z=="open"or Z=="close"then local a=GEA.getId(n,aa)if a>0 then local ai=100;if#aa>2 then if Z=="close"then ai=ai-aa[3]else ai=aa[3]end;fibaro:call(a,"setValue",ai)GEA.log("sendActions",n,"!ACTION! : setValue "..ai,true)elseif#aa>1 then if Z=="close"then ai=ai-aa[2]else ai=aa[2]end;fibaro:call(a,"setValue",ai)GEA.log("sendActions",n,"!ACTION! : setValue "..ai,true)else fibaro:call(a,aa[1])GEA.log("sendActions",n,"!ACTION! :  "..aa[1],true)end end end end end end;if n[GEA.keys["MESSAGE"]]~=""and not a9 then if n[GEA.keys["MESSAGE"]]=="debug"then fibaro:debug("=============="..os.time().."=====================")else for l=1,#GEA.portables do fibaro:call(tonumber(GEA.portables[l]),"sendPush",GEA.getMessage(n,nil))GEA.log("sendActions",n,"!ACTION! : sendPush "..GEA.getMessage(n,nil),true)end end end end;GEA.getId=function(n,aj)local a=0;if aj and type(aj)=="table"and#aj>1 and string.lower(aj[1])=="turnoff"or string.lower(aj[1])=="turnon"or string.lower(aj[1])=="switch"then a=tonumber(aj[2])elseif aj and type(aj)=="table"and#aj>2 and string.lower(aj[1])=="value"or string.lower(aj[1])=="open"or string.lower(aj[1])=="close"then a=tonumber(aj[2])elseif type(n[GEA.keys["ID"]])=="number"then a=n[GEA.keys["ID"]]elseif type(n[GEA.keys["ID"]])=="table"and string.lower(n[GEA.keys["ID"]][1])=="sensor+"or string.lower(n[GEA.keys["ID"]][1])=="sensor-"or string.lower(n[GEA.keys["ID"]][1])=="value-"or string.lower(n[GEA.keys["ID"]][1])=="value+"or string.lower(n[GEA.keys["ID"]][1])=="dead"then a=tonumber(n[GEA.keys["ID"]][2])end;if a==0 then fibaro:debug(GEA.translate[GEA.language]["DEVICE_NOT_FOUND"])end;return a end;GEA.pause=function()local ak=true;if#GEA.getGlobalForActivation>0 then ak=false;if fibaro:getGlobalValue(GEA.getGlobalForActivation[1])==GEA.getGlobalForActivation[2]then ak=true else GEA.log("Run",nil,GEA.translate[GEA.language]["GEA_SUSPENDED"].." "..GEA.getGlobalForActivation[1].." "..GEA.translate[GEA.language]["VALUE"].." "..fibaro:getGlobalValue(GEA.getGlobalForActivation[1]).." "..GEA.translate[GEA.language]["REQUIRED"].." "..GEA.getGlobalForActivation[2],true)end end;return not ak end;GEA.run=function()if config then config()end;if setEvents then setEvents()end;if GEA.isVersionFour then GEA.power="power"end;GEA.log("GEA Version "..GEA.version,nil," "..GEA.translate[GEA.language]["RUNNING"].."...",true,"green")if#GEA.todo==0 then if GEA.source["type"]~="property"then GEA.log(GEA.translate[GEA.language]["RUN"],nil,GEA.translate[GEA.language]["NOTHING_TODO"],true)else GEA.log(GEA.translate[GEA.language]["RUN"],nil,GEA.translate[GEA.language]["NOTHING_TODOID"]..GEA.source["deviceID"],true)end;return false end;local al=#GEA.todo;if GEA.source["type"]=="autostart"then if GEA.useTasksGlobal then fibaro:setGlobal(GEA.globalTasks,GEA.suspended)else GEA.tasks=GEA.suspended end;local am=GEA.checkEvery;local an=1;local ao=true;local ap=os.time()while true do GEA.log(GEA.translate[GEA.language]["RUN"],nil,GEA.translate[GEA.language]["SLEEPING"].." "..GEA.checkEvery.." "..GEA.translate[GEA.language]["SECONDS"],false)fibaro:sleep(am*1000)local aq=os.time()local ar=GEA.checkAllToDo(al)local as=ar-aq;if ao then as=as*2;ao=false end;am=GEA.checkEvery-as;if an>=20 then local _=GEA.translate[GEA.language]["RUN_FOR"]..as.."s "..GEA.translate[GEA.language]["RUN_NEW"]..am.."s / "..GEA.translate[GEA.language]["RUN_SINCE"].." "..GEA.getDureeInString(os.time()-ap)[1]fibaro:debug("<span style=\"color:CadetBlue; padding-left:125px; display:inline-block; width:80%; margin-top:-18px; padding-top:-18px; text-align:left;\">".._.."</span>")an=0 end;an=an+1 end else GEA.checkAllToDo(al)end end;GEA.checkAllToDo=function(al)if not GEA.pause()then for l=1,al do GEA.log(GEA.translate[GEA.language]["RUN"],GEA.todo[l],GEA.translate[GEA.language]["CHECKING"],false)if GEA.catchError then if not pcall(function()GEA.check(GEA.todo[l],l)end)then GEA.log(GEA.translate[GEA.language]["ERROR"],GEA.todo[l],GEA.translate[GEA.language]["CHECKING"],true,red)end else GEA.check(GEA.todo[l],l)end end end;return os.time()end;GEA.log=function(at,n,c,au,av)if au or GEA.debug then local _=""local j="If"if not n and not au then return elseif n then local aw=type(n[GEA.keys["ID"]])if n[GEA.keys["NAME"]]then j=n[GEA.keys["NAME"]]if type(j)=="table"then j=j[1]end;j=j.." ] "if aw=="nil"or aw=="boolean"then _=_.."[ "..j elseif aw=="number"then _=_.."[ "..n[GEA.keys["ID"]].." | "..j elseif aw=="table"then lowerId=string.lower(n[GEA.keys["ID"]][1])if GEA.match(lowerId,"global|global.")then _=_.."[ "..n[GEA.keys["ID"]][2].."="..n[GEA.keys["ID"]][3].." ] "elseif lowerId=="batteries"then _=_.."[ "..n[GEA.keys["ID"]][2].." ] "elseif lowerId=="group"then _=_.."[ "..j elseif GEA.match(lowerId,"sensor|sensor.|value|value.|dead|sceneactivation|battery")then _=_.."[ "..j elseif GEA.match(lowerId,"slider|slider.|label|label.|property|property.")then _=_.."[ "..j elseif lowerId=="weather"then _=_.."[ Weather ] "elseif lowerId=="function"then _=_.."[ Function ] "elseif lowerId=="alarm"then _=_.."Alarm "..fibaro:getValue(tonumber(n[GEA.keys["ID"]][2]),"ui.lblAlarme.value")else end end end end;if at and at~=""then _=_..string.format("%-20s",at)..": "end;if c and c~=""then _=_..string.format("%-20s",c)end;if n then if n[GEA.keys["INDEX"]]then _=_.." (ID: "..n[GEA.keys["INDEX"]]..")"end;if n[GEA.keys["PARAMS"]]and type(n[GEA.keys["PARAMS"]])=="table"and#n[GEA.keys["PARAMS"]]>0 then for l=1,#n[GEA.keys["PARAMS"]]do _=_.." ["local ax=n[GEA.keys["PARAMS"]][l]if type(ax)=="table"then for a5=1,#ax do if string.lower(ax[1])=="if"then if a5==1 then _=_.."If..."end elseif string.lower(ax[1])=="function"then if a5==1 then _=_.."Function..."end else _=_..ax[a5]..","end end end;_=_:sub(1,_:len()-1).."]"end end end;fibaro:debug("<span style=\"color:"..(av or"white").."; padding-left: 125px; display:inline-block; width:80%; margin-top:-18px; padding-top:-18px; text-align:left;\">".._.."</span>")end end end;GEA.run()